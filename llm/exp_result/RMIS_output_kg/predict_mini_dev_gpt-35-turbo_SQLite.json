{
  "0": "SELECT \n    COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) AS EUR_Customers,\n    COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS CZK_Customers,\n    COUNT(*) AS Total_Customers,\n    (COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) * 1.0) / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS EUR_to_CZK_Ratio\nFROM customers;\t----- bird -----\tdebit_card_specializing",
  "1": "SELECT customers.CustomerID\nFROM customers\nJOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID\nWHERE yearmonth.Date LIKE '2012%'\nAND customers.Segment = 'LAM'\nORDER BY yearmonth.Consumption\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "2": "SELECT AVG(Consumption)\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Segment = 'SME' AND y.Date LIKE '2013%'\t----- bird -----\tdebit_card_specializing",
  "3": "SELECT SUM(y.Consumption)\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Date LIKE '2012%'\nAND c.Currency = 'CZK' OR c.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
  "4": "SELECT SUBSTR(Date, 1, 4) AS Year\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE'\nGROUP BY Year\nORDER BY SUM(Amount) DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "5": "SELECT Date, SUM(Consumption) AS TotalConsumption\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE Segment = 'SME' AND Date LIKE '2013%'\nGROUP BY Date\nORDER BY TotalConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "6": "SELECT AVG(y.Consumption) AS Annual_Average_Consumption\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Segment = 'SME' AND y.Date LIKE '2013%'\nUNION\nSELECT AVG(y.Consumption) AS Annual_Average_Consumption\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Segment = 'LAM' AND y.Date LIKE '2013%'\nUNION\nSELECT AVG(y.Consumption) AS Annual_Average_Consumption\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Segment = 'KAM' AND y.Date LIKE '2013%';\t----- bird -----\tdebit_card_specializing",
  "7": "WITH segment_consumption AS (\n\tSELECT y.CustomerID, \n\t\tAVG(y.Consumption) AS avg_consumption,\n\t\tc.Segment\n\tFROM yearmonth y\n\tJOIN customers c ON y.CustomerID = c.CustomerID\n\tWHERE y.Date LIKE '2012%' OR y.Date LIKE '2013%'\n\tGROUP BY y.CustomerID\n)\nSELECT Segment,\n\t(MAX(avg_consumption) - MIN(avg_consumption)) / MIN(avg_consumption) AS percentage_increase\nFROM segment_consumption\nWHERE Segment IN ('SME', 'LAM', 'KAM')\nGROUP BY Segment;\t----- bird -----\tdebit_card_specializing",
  "8": "SELECT SUM(ym.Consumption)\nFROM yearmonth ym\nWHERE ym.CustomerID = 6\nAND ym.Date >= '201308'\nAND ym.Date <= '201311';\t----- bird -----\tdebit_card_specializing",
  "9": "SELECT COUNT(*) AS DiscountGasStations\nFROM gasstations\nWHERE Country = 'CZE' AND Segment = 'Value for money'\t----- bird -----\tdebit_card_specializing",
  "10": "SELECT COUNT(*) AS num_sme_czk\nFROM gasstations\nWHERE Segment = 'SME' AND Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
  "11": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM yearmonth WHERE CustomerID = 5) \nFROM yearmonth \nWHERE CustomerID = 5 AND Consumption > 46.73;\t----- bird -----\tdebit_card_specializing",
  "12": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM yearmonth WHERE Date = '201202') \nFROM yearmonth \nWHERE Date = '201202' AND Consumption > 528.3;\t----- bird -----\tdebit_card_specializing",
  "13": "SELECT MAX(Consumption) AS HighestMonthlyConsumption\nFROM yearmonth\nWHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
  "14": "SELECT p.Description\nFROM products p\nJOIN transactions_1k t ON p.ProductID = t.ProductID\nWHERE t.Date LIKE '2013-09%'\t----- bird -----\tdebit_card_specializing",
  "15": "SELECT DISTINCT Country\nFROM gasstations\nWHERE GasStationID IN (\n\tSELECT GasStationID\n\tFROM transactions_1k\n\tWHERE strftime('%Y-%m', Date) = '2013-06'\n)\t----- bird -----\tdebit_card_specializing",
  "16": "SELECT COUNT(DISTINCT y.CustomerID)\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Currency = 'EUR' AND y.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
  "17": "SELECT p.Description\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
  "18": "SELECT DISTINCT Time\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.ChainID = 11;\t----- bird -----\tdebit_card_specializing",
  "19": "SELECT COUNT(*)\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE' AND t.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
  "20": "SELECT c.Currency\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE t.Time = '16:25:00' AND t.Date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
  "21": "SELECT c.Segment\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nWHERE t.Date = '2012-08-23' AND t.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
  "22": "SELECT COUNT(*)\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Date = '2012-08-26' AND t.Time BETWEEN '08:00:00' AND '09:00:00'\nAND g.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
  "23": "SELECT gasstations.Country\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Price = 548.4;\t----- bird -----\tdebit_card_specializing",
  "24": "SELECT COUNT(DISTINCT c.\"CustomerID\") * 100.0 / (SELECT COUNT(DISTINCT \"CustomerID\") FROM customers) AS percentage\nFROM customers c\nJOIN transactions_1k t ON c.\"CustomerID\" = t.\"CustomerID\"\nWHERE t.\"Date\" = '2012-08-25'\nAND c.\"Currency\" = 'EUR';\t----- bird -----\tdebit_card_specializing",
  "25": "SELECT ((ym2012.Consumption - ym2013.Consumption) / ym2012.Consumption) AS DecreaseRate\nFROM yearmonth ym2012\nJOIN yearmonth ym2013 ON ym2012.CustomerID = ym2013.CustomerID\nWHERE ym2012.Date = '201208' AND ym2013.Date = '201303'\nAND ym2012.CustomerID = (\n    SELECT t.CustomerID\n    FROM transactions_1k t\n    WHERE t.Price = 634.8 AND t.Date = '2012-08-25'\n)\t----- bird -----\tdebit_card_specializing",
  "26": "SELECT \n    (COUNT(*) * 100.0) / \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK') \nFROM \n    gasstations \nWHERE \n    Country = 'SVK' \n    AND Segment = 'Premium'\t----- bird -----\tdebit_card_specializing",
  "27": "ERROR: (sqlite3.ProgrammingError) You can only execute one statement at a time.\n[SQL: SELECT SUM(Price) \nFROM transactions_1k \nWHERE CustomerID = 38508; \n\nSELECT SUM(Price) \nFROM transactions_1k \nWHERE CustomerID = 38508 \nAND Date LIKE '2012-01%';]\n(Background on this error at: https://sqlalche.me/e/20/f405)\t----- bird -----\tdebit_card_specializing",
  "28": "SELECT c.\"CustomerID\", SUM(t.\"Price\") AS total_spent, AVG(t.\"Price\") AS avg_price_per_item, c.\"Currency\"\nFROM customers c\nJOIN transactions_1k t ON c.\"CustomerID\" = t.\"CustomerID\"\nGROUP BY c.\"CustomerID\"\nORDER BY total_spent DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
  "29": "ERROR: Error code: 429 - {'error': {'code': '429', 'message': 'Requests to the ChatCompletions_Create Operation under Azure OpenAI API version 2024-12-01-preview have exceeded token rate limit of your current OpenAI S0 pricing tier. Please retry after 48 seconds. Please go here: https://aka.ms/oai/quotaincrease if you would like to further increase the default rate limit. For Free Account customers, upgrade to Pay as you Go here: https://aka.ms/429TrialUpgrade.'}}\t----- bird -----\tdebit_card_specializing",
  "30": "SELECT major_name\nFROM major\nJOIN member ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders';\t----- bird -----\tstudent_club",
  "31": "SELECT COUNT(*) \nFROM member \nJOIN attendance ON member.member_id = attendance.link_to_member \nJOIN event ON attendance.link_to_event = event.event_id \nWHERE event.event_name = \"Women's Soccer\" \nAND member.t_shirt_size = \"Medium\"\t----- bird -----\tstudent_club",
  "32": "SELECT COUNT(*) \nFROM event \nWHERE event_id IN (\n    SELECT link_to_event \n    FROM attendance \n    GROUP BY link_to_event \n    HAVING COUNT(link_to_member) > 10\n) AND type = 'Meeting'\t----- bird -----\tstudent_club",
  "33": "SELECT event_name\nFROM event\nWHERE event_id IN (\n    SELECT link_to_event\n    FROM attendance\n    GROUP BY link_to_event\n    HAVING COUNT(link_to_member) > 20\n)\nAND event_id NOT IN (\n    SELECT link_to_event\n    FROM budget\n    WHERE category = 'Fundraiser'\n)\t----- bird -----\tstudent_club",
  "34": "SELECT amount\nFROM income\nWHERE link_to_member = 'rec7f5XMQZexgtQJo'\t----- bird -----\tstudent_club",
  "35": "SELECT first_name || ' ' || last_name\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\nWHERE zip_code.state = 'Illinois'\t----- bird -----\tstudent_club",
  "36": "SELECT expense_id, expense_description, expense_date, approved\nFROM expense\nWHERE expense_date = '2019-10-08' \nAND expense_description LIKE '%Meeting%' \nAND approved = 'true';\t----- bird -----\tstudent_club",
  "37": "SELECT AVG(cost) AS average_cost\nFROM expense\nWHERE link_to_member = 'rec1x5zBFIqoOuPW8'\nAND link_to_budget IN (\n    SELECT budget_id\n    FROM budget\n    WHERE link_to_event IN (\n        SELECT event_id\n        FROM event\n        WHERE event_date LIKE '2019-09%' OR event_date LIKE '2019-10%'\n    )\n)\t----- bird -----\tstudent_club",
  "38": "SELECT SUM(e.spent) AS total_spent\nFROM budget e\nJOIN event ev ON e.link_to_event = ev.event_id\nWHERE SUBSTR(ev.event_date, 1, 4) IN ('2019', '2020')\t----- bird -----\tstudent_club",
  "39": "SELECT notes\nFROM income\nWHERE date_received = '2019-09-14'\t----- bird -----\tstudent_club",
  "40": "SELECT phone\nFROM member\nWHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
  "41": "SELECT event.status\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nJOIN expense ON budget.budget_id = expense.link_to_budget\nWHERE expense.expense_description = 'Post Cards, Posters' AND expense.expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
  "42": "SELECT major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE first_name = 'Brent' AND last_name = 'Thomason'\t----- bird -----\tstudent_club",
  "43": "SELECT COUNT(*) \nFROM member \nWHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Business') \nAND t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
  "44": "SELECT major.department\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.position = 'President'\t----- bird -----\tstudent_club",
  "45": "SELECT date_received\nFROM income\nWHERE link_to_member = 'recTjHY5xXhvkCdVT';\t----- bird -----\tstudent_club",
  "46": "SELECT COUNT(*) \nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'Yearly Kickoff' \nAND b.category = 'Advertisement' \nAND b.spent > (\n\tSELECT spent \n\tFROM budget \n\tJOIN event ON budget.link_to_event = event.event_id \n\tWHERE event.event_name = 'October Meeting' \n\tAND budget.category = 'Advertisement'\n)\t----- bird -----\tstudent_club",
  "47": "SELECT SUM(cost) \nFROM expense \nWHERE expense_description LIKE '%Pizza%'\t----- bird -----\tstudent_club",
  "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
  "49": "SELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.phone = '809-555-3360'\t----- bird -----\tstudent_club",
  "50": "SELECT COUNT(*) \nFROM attendance \nWHERE link_to_event = 'rec0Si5cQ4rJRVzd6'\t----- bird -----\tstudent_club",
  "51": "SELECT * FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE department = 'School of Applied Sciences, Technology and Education')\t----- bird -----\tstudent_club",
  "52": "SELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE b.event_status = 'Closed'\nORDER BY b.spent / b.amount DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
  "53": "SELECT MAX(spent) AS highest_budget_spend\nFROM budget;\t----- bird -----\tstudent_club",
  "54": "SELECT SUM(spent) \nFROM budget \nWHERE category = 'Food'\t----- bird -----\tstudent_club",
  "55": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.first_name, m.last_name\nHAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
  "56": "SELECT m.first_name, m.last_name\nFROM member m\nJOIN budget b ON m.member_id = b.link_to_event\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
  "57": "SELECT event_name\nFROM event\nWHERE event_id IN (\n    SELECT link_to_event\n    FROM budget\n    WHERE amount = (\n        SELECT MIN(amount)\n        FROM budget\n    )\n)\t----- bird -----\tstudent_club",
  "58": "SELECT SUM(cost) AS total_cost_yearly_kickoff_event, \n       (SUM(cost) / (SELECT SUM(cost) FROM expense WHERE link_to_budget = 'recI43CzsZ0Q625ma')) * 100 AS percentage_cost_yearly_kickoff_event\nFROM expense\nWHERE link_to_budget = 'recI43CzsZ0Q625ma';\t----- bird -----\tstudent_club",
  "59": "SELECT source, SUM(amount) AS total_amount\nFROM income\nWHERE date_received LIKE '2019-09%'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
  "60": "SELECT COUNT(*) \nFROM member \nWHERE link_to_major = 'rec0Eanv576RhQllI'\t----- bird -----\tstudent_club",
  "61": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.category = 'Advertisement'\nORDER BY budget.spent DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
  "62": "ERROR: (sqlite3.OperationalError) near \"s\": syntax error\n[SQL: SELECT * \nFROM member \nJOIN attendance ON member.member_id = attendance.link_to_member \nJOIN event ON attendance.link_to_event = event.event_id \nWHERE member.first_name = 'Maya' AND member.last_name = 'Mclean' AND event.event_name = 'Women\\'s Soccer';]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tstudent_club",
  "63": "SELECT cost\nFROM expense\nWHERE expense_description = 'Post Cards, Posters'\nAND link_to_budget = 'rec1oMgNFt7Y0G40x'\t----- bird -----\tstudent_club",
  "64": "SELECT event.event_name\nFROM event\nJOIN budget ON event.event_id = budget.link_to_event\nWHERE budget.event_status = 'Closed'\nORDER BY (budget.spent - budget.amount) DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
  "65": "SELECT e.event_name, ex.expense_description, SUM(ex.cost) AS total_approved_value\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nJOIN expense ex ON b.budget_id = ex.link_to_budget\nWHERE e.event_name = 'October Meeting'\nGROUP BY e.event_name, ex.expense_description;\t----- bird -----\tstudent_club",
  "66": "SELECT category, amount\nFROM budget\nWHERE link_to_event = 'rec0Si5cQ4rJRVzd6'\t----- bird -----\tstudent_club",
  "67": "SELECT SUM(cost) \nFROM expense \nWHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
  "68": "SELECT first_name || ' ' || last_name AS full_name, SUM(cost) AS total_cost\nFROM member\nJOIN expense ON member.member_id = expense.link_to_member\nWHERE member.member_id = 'rec4BLdZHS2Blfp4v'\t----- bird -----\tstudent_club",
  "69": "SELECT expense_description\nFROM expense\nWHERE link_to_member = 'rec1x5zBFIqoOuPW8'\t----- bird -----\tstudent_club",
  "70": "SELECT DISTINCT category\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.location = 'MU 215'\t----- bird -----\tstudent_club",
  "71": "SELECT m.last_name, ma.department, ma.college\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
  "72": "SELECT b.category\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.location = 'MU 215' AND e.type = 'Guest Speaker' AND b.spent = 0;\t----- bird -----\tstudent_club",
  "73": "SELECT COUNT(income.amount) * 100 / (SELECT COUNT(*) FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.t_shirt_size = 'Medium' AND income.amount = 50) AS percentage\nFROM income\nJOIN member ON income.link_to_member = member.member_id\nWHERE member.t_shirt_size = 'Medium' AND income.amount = 50\t----- bird -----\tstudent_club",
  "74": "SELECT event_name\nFROM event\nWHERE status = 'Closed' AND type = 'game' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
  "75": "SELECT m.first_name || ' ' || m.last_name AS full_name, m.phone\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
  "76": "SELECT m.first_name || ' ' || m.last_name AS full_name, e.cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.expense_description LIKE '%water%'\nAND e.expense_description LIKE '%veggie tray%'\nAND e.expense_description LIKE '%supplies%'\t----- bird -----\tstudent_club",
  "77": "SELECT m.first_name, m.last_name, i.amount\nFROM member m\nJOIN income i ON m.member_id = i.link_to_member\nWHERE i.date_received = '2019-09-09'\t----- bird -----\tstudent_club",
  "78": "SELECT \"Admission\", COUNT(*) AS \"Total\",\n    ROUND(CAST(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM \"Patient\" WHERE \"SEX\" = 'M') AS NUMERIC), 2) AS \"Deviation (%)\"\nFROM \"Patient\"\nWHERE \"SEX\" = 'M'\nGROUP BY \"Admission\"\t----- bird -----\tthrombosis_prediction",
  "79": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F') \nFROM Patient \nWHERE SEX = 'F' AND Birthday > '1930-01-01'\t----- bird -----\tthrombosis_prediction",
  "80": "SELECT COUNT(CASE WHEN p.Admission = '+' THEN 1 END) AS Inpatient,\n       COUNT(CASE WHEN p.Admission = '-' THEN 1 END) AS Outpatient,\n       (COUNT(CASE WHEN p.Admission = '-' THEN 1 END) * 1.0) / COUNT(CASE WHEN p.Admission = '+' THEN 1 END) AS Ratio\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE p.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
  "81": "SELECT Diagnosis, Date\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.ID = 30609;\t----- bird -----\tthrombosis_prediction",
  "82": "ERROR: Error code: 400 - {'error': {'message': \"This model's maximum context length is 16385 tokens. However, your messages resulted in 24744 tokens. Please reduce the length of the messages.\", 'type': 'invalid_request_error', 'param': 'messages', 'code': 'context_length_exceeded'}}\t----- bird -----\tthrombosis_prediction",
  "83": "SELECT P.ID, strftime('%Y', 'now') - strftime('%Y', P.Birthday) AS Age\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE E.RVVT IS NOT NULL OR E.LAC IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "84": "SELECT p.ID, p.SEX, p.Diagnosis\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.Thrombosis = 1;\t----- bird -----\tthrombosis_prediction",
  "85": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' \nAND Admission = '+' \nAND \"First Date\" >= '1997-01-01' \nAND \"First Date\" <= '1997-12-31'\t----- bird -----\tthrombosis_prediction",
  "86": "SELECT COUNT(*) \nFROM Examination \nWHERE \"Examination Date\" LIKE '1997%' \nAND \"Thrombosis\" = (SELECT MAX(\"Thrombosis\") FROM Examination) \nAND \"ID\" IN (SELECT \"ID\" FROM Patient WHERE SEX = 'F')\t----- bird -----\tthrombosis_prediction",
  "87": "SELECT Symptoms, Diagnosis\nFROM Examination\nWHERE \"ID\" = (\n    SELECT \"ID\"\n    FROM Patient\n    WHERE Birthday = (\n        SELECT MIN(Birthday)\n        FROM Patient\n    )\n)\t----- bird -----\tthrombosis_prediction",
  "88": "SELECT MAX(L.Date) AS \"Date\", STRFTIME('%Y', P.Admission, 'unixepoch') - STRFTIME('%Y', P.Birthday, 'unixepoch') AS \"Age at Admission\"\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nJOIN Examination E ON L.ID = E.ID\nWHERE P.Diagnosis = 'SJS'\t----- bird -----\tthrombosis_prediction",
  "89": "SELECT COUNT(DISTINCT p.ID) / COUNT(DISTINCT p2.ID) AS \"Male to Female Ratio\"\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nJOIN (\n\tSELECT ID\n\tFROM Laboratory\n\tWHERE UA > 7\n) AS abn ON l.ID = abn.ID\nJOIN Patient p2 ON p2.ID = l.ID\nWHERE p.SEX = 'M' OR p.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
  "90": "SELECT COUNT(*) \nFROM Examination \nJOIN Patient ON Examination.ID = Patient.ID \nWHERE Patient.Birthday BETWEEN '1990-01-01' AND '1993-12-31'\t----- bird -----\tthrombosis_prediction",
  "91": "ERROR: (sqlite3.OperationalError) no such column: e.HGB\n[SQL: SELECT strftime('%Y', 'now') - strftime('%Y', p.\"Birthday\") AS \"Age\", e.\"Diagnosis\"\nFROM \"Examination\" e\nJOIN \"Patient\" p ON e.\"ID\" = p.\"ID\"\nWHERE e.\"HGB\" = (SELECT MAX(\"HGB\") FROM \"Examination\")]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tthrombosis_prediction",
  "92": "SELECT \"aCL IgG\", \"aCL IgM\", \"aCL IgA\"\nFROM \"Examination\"\nWHERE \"ID\" = (\n\tSELECT \"ID\"\n\tFROM \"Patient\"\n\tWHERE \"Diagnosis\" = 'SLE'\n\tAND \"First Date\" = '1993-11-12'\n)\t----- bird -----\tthrombosis_prediction",
  "93": "SELECT (l1.\"T-CHO\" - l2.\"T-CHO\") / l1.\"T-CHO\" AS \"Decrease Rate\"\nFROM Laboratory l1\nJOIN Laboratory l2 ON l1.\"ID\" = l2.\"ID\"\nWHERE l1.\"Date\" = '1981-11-01' AND l2.\"Date\" = '1981-12-01'\nAND l1.\"ID\" IN (SELECT \"ID\" FROM Patient WHERE \"Birthday\" = '1959-02-18')\t----- bird -----\tthrombosis_prediction",
  "94": "SELECT DISTINCT e.\"ID\"\nFROM Examination e\nJOIN Laboratory l ON e.\"ID\" = l.\"ID\"\nWHERE e.\"Examination Date\" BETWEEN '1987-07-06' AND '1996-01-31'\nAND l.\"GPT\" > 30\nAND l.\"ALB\" < 4;\t----- bird -----\tthrombosis_prediction",
  "95": "ERROR: (sqlite3.OperationalError) near \"Pattern\": syntax error\n[SQL: SELECT COUNT(*) \nFROM Examination \nWHERE Thrombosis = 2 \nAND ANA Pattern = 'S' \nAND \"aCL IgM\" > (SELECT AVG(\"aCL IgM\") * 1.2 FROM Examination)]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tthrombosis_prediction",
  "96": "SELECT p.*\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.Date >= '1991-10-01' AND l.Date <= '1991-10-31'\nAND l.\"T-BIL\" >= 0.3 AND l.\"T-BIL\" <= 1.2;\t----- bird -----\tthrombosis_prediction",
  "97": "SELECT AVG(l.\"ALB\") \nFROM \"Laboratory\" l \nJOIN \"Patient\" p ON l.\"ID\" = p.\"ID\" \nWHERE p.\"SEX\" = 'F' \nAND l.\"PLT\" > 400 \nAND p.\"Diagnosis\" = 'SLE'\t----- bird -----\tthrombosis_prediction",
  "98": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' AND Diagnosis LIKE '%APS%'\t----- bird -----\tthrombosis_prediction",
  "99": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient WHERE strftime('%Y', Birthday) = '1980' AND Diagnosis = 'RA') \nFROM Patient \nWHERE strftime('%Y', Birthday) = '1980' AND Diagnosis = 'RA' AND SEX = 'F'\t----- bird -----\tthrombosis_prediction",
  "100": "SELECT \"UA\"\nFROM \"Laboratory\"\nWHERE \"ID\" = 57266\t----- bird -----\tthrombosis_prediction",
  "101": "SELECT DISTINCT P.ID\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'M' AND L.GPT > 40;\t----- bird -----\tthrombosis_prediction",
  "102": "SELECT p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GPT > 40\nORDER BY p.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
  "103": "SELECT ID, SEX, Birthday\nFROM Patient\nWHERE ID IN (\n\tSELECT ID\n\tFROM Laboratory\n\tWHERE UN >= 29 AND UN <= 36\n)\t----- bird -----\tthrombosis_prediction",
  "104": "SELECT p.SEX, l.\"T-BIL\"\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.\"T-BIL\" NOT BETWEEN 0.3 AND 1.2\nGROUP BY p.SEX;\t----- bird -----\tthrombosis_prediction",
  "105": "SELECT AVG(strftime('%Y', 'now') - strftime('%Y', p.Birthday)) AS \"Average Age\"\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M' AND l.\"T-CHO\" > 200;\t----- bird -----\tthrombosis_prediction",
  "106": "SELECT COUNT(*) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE TG > 150 \nAND Birthday < DATE('now', '-50 years')\t----- bird -----\tthrombosis_prediction",
  "107": "SELECT COUNT(*) \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE p.Birthday BETWEEN '1936-01-01' AND '1956-12-31' \nAND p.SEX = 'M' \nAND l.CPK > 200\t----- bird -----\tthrombosis_prediction",
  "108": "ERROR: (sqlite3.OperationalError) no such column: T\n[SQL: SELECT ID, SEX, strftime('%Y', 'now') - strftime('%Y', Birthday) - (strftime('%m-%d', 'now') < strftime('%m-%d', Birthday)) AS Age\nFROM Patient\nWHERE ID IN (\n\tSELECT ID\n\tFROM Laboratory\n\tWHERE GLU NOT BETWEEN 70 AND 100\n\tAND T-CHO BETWEEN 125 AND 200\n)]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tthrombosis_prediction",
  "109": "ERROR: Error code: 429 - {'error': {'code': '429', 'message': 'Requests to the ChatCompletions_Create Operation under Azure OpenAI API version 2024-12-01-preview have exceeded token rate limit of your current OpenAI S0 pricing tier. Please retry after 1 second. Please go here: https://aka.ms/oai/quotaincrease if you would like to further increase the default rate limit. For Free Account customers, upgrade to Pay as you Go here: https://aka.ms/429TrialUpgrade.'}}\t----- bird -----\tthrombosis_prediction",
  "110": "SELECT ID, SEX\nFROM Patient\nWHERE Diagnosis = 'SLE'\nAND Birthday = (SELECT MAX(Birthday) FROM Patient WHERE Diagnosis = 'SLE')\nAND ID IN (SELECT ID FROM Laboratory WHERE HGB BETWEEN 12 AND 16)\t----- bird -----\tthrombosis_prediction",
  "111": "SELECT P.ID, strftime('%Y', 'now') - strftime('%Y', P.Birthday) - (strftime('%m-%d', 'now') < strftime('%m-%d', P.Birthday)) AS Age\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nGROUP BY P.ID\nHAVING COUNT(L.ID) >= 2 AND MAX(L.HCT) > 50.0;\t----- bird -----\tthrombosis_prediction",
  "112": "SELECT COUNT(*) AS \"Number of Patients with Lower Than Normal Platelet Level\",\n(SELECT COUNT(*) FROM Laboratory WHERE PLT > 150) AS \"Number of Patients with Higher Than Normal Platelet Level\"\nFROM Laboratory\nWHERE PLT < 150;\t----- bird -----\tthrombosis_prediction",
  "113": "ERROR: Error code: 429 - {'error': {'code': '429', 'message': 'Requests to the ChatCompletions_Create Operation under Azure OpenAI API version 2024-12-01-preview have exceeded token rate limit of your current OpenAI S0 pricing tier. Please retry after 3 seconds. Please go here: https://aka.ms/oai/quotaincrease if you would like to further increase the default rate limit. For Free Account customers, upgrade to Pay as you Go here: https://aka.ms/429TrialUpgrade.'}}\t----- bird -----\tthrombosis_prediction",
  "114": "SELECT COUNT(DISTINCT p.ID) * 100.0 / COUNT(DISTINCT p.ID) AS Percentage\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Birthday < DATE('now', '-55 years')\nAND p.SEX = 'F'\nAND l.PT IS NOT NULL\nAND l.PT > 13.5;\t----- bird -----\tthrombosis_prediction",
  "115": "SELECT COUNT(*) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Patient.SEX = 'M' \nAND Laboratory.WBC <= 10.0 \nAND Laboratory.FG > 4.0;\t----- bird -----\tthrombosis_prediction",
  "116": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.\"aCL IgG\" > 1.5\t----- bird -----\tthrombosis_prediction",
  "117": "SELECT COUNT(*) \nFROM Examination \nWHERE \"aCL IgG\" <= 2.0 \nAND \"Symptoms\" IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
  "118": "SELECT COUNT(*) \nFROM Laboratory \nJOIN Patient ON Laboratory.ID = Patient.ID \nWHERE \"IGA\" = 0 AND Laboratory.Date > '1990-01-01'\t----- bird -----\tthrombosis_prediction",
  "119": "SELECT p.Diagnosis\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.\"aCL IgM\" > 2.0;\t----- bird -----\tthrombosis_prediction",
  "120": "SELECT COUNT(*) \nFROM Patient \nWHERE ID NOT IN (\n    SELECT ID \n    FROM Laboratory \n    WHERE CRP = 'abnormal'\n)\t----- bird -----\tthrombosis_prediction",
  "121": "SELECT COUNT(*) \nFROM Patient \nWHERE ID IN (\n\tSELECT ID \n\tFROM Laboratory \n\tWHERE CRE <> 0.7 \n\tAND CRE IS NOT NULL\n) \nAND Birthday > DATE('1950-01-01')\t----- bird -----\tthrombosis_prediction",
  "122": "SELECT COUNT(*) \nFROM Patient \nWHERE ID IN (\n\tSELECT ID \n\tFROM Laboratory \n\tWHERE RNP = 'None' \n\tAND Admission = '+'\n)\t----- bird -----\tthrombosis_prediction",
  "123": "SELECT COUNT(*) \nFROM Examination \nWHERE \"ID\" IN (\n\tSELECT \"ID\" \n\tFROM Laboratory \n\tWHERE \"SM\" = 'None'\n) \nAND \"Thrombosis\" = 0;\t----- bird -----\tthrombosis_prediction",
  "124": "SELECT COUNT(*) \nFROM Examination \nWHERE \"aCL IgG\" = 0 AND \"Symptoms\" = 'None'\t----- bird -----\tthrombosis_prediction",
  "125": "SELECT COUNT(*) \nFROM Patient \nWHERE ID IN (\n\tSELECT ID \n\tFROM Laboratory \n\tWHERE \"CENTROMEA\" = 'None' \n\tAND \"SSB\" = 'None'\n) \nAND SEX = 'M'\t----- bird -----\tthrombosis_prediction",
  "126": "SELECT MIN(Birthday) \nFROM Patient \nWHERE ID IN (\n\tSELECT ID \n\tFROM Laboratory \n\tWHERE GOT > 40\n)\t----- bird -----\tthrombosis_prediction",
  "127": "SELECT COUNT(*) \nFROM Laboratory \nWHERE CPK <= 200 \nAND (PT IS NOT NULL OR APTT IS NOT NULL)\t----- bird -----\tthrombosis_prediction",
  "128": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2016'\nORDER BY m.home_team_goal + m.away_team_goal DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "129": "SELECT away_team_api_id, COUNT(*) AS total_wins\nFROM Match\nWHERE league_id = 1729\nAND season = '2010'\nAND away_team_goal > home_team_goal\nGROUP BY away_team_api_id\nORDER BY total_wins DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "130": "SELECT team_long_name, \"buildUpPlaySpeed\" \nFROM Team \nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id \nORDER BY \"buildUpPlaySpeed\" DESC \nLIMIT 4;\t----- bird -----\teuropean_football_2",
  "131": "SELECT l.name AS league_name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2016'\nGROUP BY l.name\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "132": "SELECT player_name, \n       birthday, \n       height, \n       weight, \n       sprint_speed, \n       strftime('%Y', 'now') - strftime('%Y', birthday) - (strftime('%m-%d', 'now') < strftime('%m-%d', birthday)) AS age\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE sprint_speed >= 97\nAND date BETWEEN '2013-01-01' AND '2015-12-31'\t----- bird -----\teuropean_football_2",
  "133": "SELECT name AS league_name, COUNT(*) AS total_matches\nFROM League\nJOIN Match ON League.id = Match.league_id\nGROUP BY league_name\nORDER BY total_matches DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "134": "SELECT team_fifa_api_id\nFROM Team_Attributes\nWHERE \"buildUpPlaySpeed\" > 50 AND \"buildUpPlaySpeed\" < 60;\t----- bird -----\teuropean_football_2",
  "135": "SELECT team_long_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE date LIKE '2012%');\t----- bird -----\teuropean_football_2",
  "136": "ERROR: (sqlite3.OperationalError) no such column: preferred_foot\n[SQL: SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player WHERE preferred_foot = 'left' AND birthday BETWEEN '1987-01-01' AND '1992-12-31') FROM Player WHERE preferred_foot = 'left' AND birthday BETWEEN '1987-01-01' AND '1992-12-31';]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\teuropean_football_2",
  "137": "SELECT AVG(long_shots) \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id \n                       FROM Player \n                       WHERE player_name = 'Ahmed Samir Farag')\t----- bird -----\teuropean_football_2",
  "138": "ERROR: (sqlite3.OperationalError) no such column: heading_accuracy\n[SQL: SELECT player_name\nFROM Player\nWHERE height > 180\nORDER BY (heading_accuracy) DESC\nLIMIT 10;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\teuropean_football_2",
  "139": "SELECT l.name\nFROM League l\nJOIN Match m ON l.id = m.league_id\nWHERE m.season = '2009/2010'\nGROUP BY l.name\nHAVING AVG(m.home_team_goal) > AVG(m.away_team_goal)\t----- bird -----\teuropean_football_2",
  "140": "SELECT * \nFROM Player \nWHERE strftime('%Y', birthday) = '1970' \nAND strftime('%m', birthday) = '10'\t----- bird -----\teuropean_football_2",
  "141": "SELECT overall_rating\nFROM Player_Attributes\nWHERE player_api_id = (\n    SELECT player_api_id\n    FROM Player\n    WHERE player_name = 'Gabriel Tamas'\n)\nAND date LIKE '2011%'\t----- bird -----\teuropean_football_2",
  "142": "SELECT AVG(home_team_goal)\nFROM Match\nWHERE season = '2010/2011'\nAND country_id = (\n    SELECT id\n    FROM Country\n    WHERE name = 'Poland'\n)\t----- bird -----\teuropean_football_2",
  "143": "SELECT player_name, AVG(finishing) AS avg_finishing\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE height = (SELECT MAX(height) FROM Player) OR height = (SELECT MIN(height) FROM Player)\nGROUP BY player_name\nORDER BY avg_finishing DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "144": "ERROR: (sqlite3.OperationalError) no such column: height\n[SQL: SELECT AVG(overall_rating) \nFROM Player_Attributes \nWHERE height > 170 \nAND date BETWEEN '2010-01-01' AND '2015-12-31']\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\teuropean_football_2",
  "145": "SELECT AVG(pa.ball_control) AS avg_ball_control\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Abdou Diallo'\nOR p.player_name = 'Aaron Appindangoye'\t----- bird -----\teuropean_football_2",
  "146": "SELECT player_name, birthday\nFROM Player\nWHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada')\nORDER BY birthday;\t----- bird -----\teuropean_football_2",
  "147": "SELECT player_name\nFROM Player\nORDER BY height DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "148": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' \nAND attacking_work_rate = 'medium' \nAND defensive_work_rate = 'medium'\t----- bird -----\teuropean_football_2",
  "149": "ERROR: (sqlite3.OperationalError) no such column: birthday\n[SQL: SELECT COUNT(*) \nFROM Player_Attributes \nWHERE birthday < '1986-01-01' \nAND attacking_work_rate = 'medium' \nAND defensive_work_rate = 'medium']\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\teuropean_football_2",
  "150": "ERROR: (sqlite3.OperationalError) no such column: player_name\n[SQL: SELECT player_name\nFROM Player_Attributes\nWHERE volleys > 70 AND dribbling > 70;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\teuropean_football_2",
  "151": "SELECT COUNT(*) \nFROM Match \nWHERE league_id = 1 \nAND date LIKE '2009-04%'\t----- bird -----\teuropean_football_2",
  "152": "SELECT name AS league_name\nFROM League\nWHERE id = (\n    SELECT league_id\n    FROM Match\n    WHERE season = '2008/2009'\n    GROUP BY league_id\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n)\t----- bird -----\teuropean_football_2",
  "153": "SELECT ((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk')) - \n(SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel'))) * 100.0 / \n(SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel')) as percentage_difference;\t----- bird -----\teuropean_football_2",
  "154": "SELECT AVG(overall_rating) \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Pietro Marino')\t----- bird -----\teuropean_football_2",
  "155": "SELECT MAX(chanceCreationPassing), chanceCreationPassingClass\nFROM Team_Attributes\nWHERE team_api_id = 9906;\t----- bird -----\teuropean_football_2",
  "156": "SELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.overall_rating = 77\nAND Player_Attributes.date = '2016-06-23'\nORDER BY Player.birthday ASC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "157": "SELECT overall_rating\nFROM Player_Attributes\nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Mooy')\nAND date = '2016-02-04 00:00:00'\t----- bird -----\teuropean_football_2",
  "158": "SELECT attacking_work_rate\nFROM Player_Attributes\nWHERE player_api_id = (\n    SELECT player_api_id\n    FROM Player\n    WHERE player_name = 'Francesco Migliore'\n)\nAND date = '2015-05-01';\t----- bird -----\teuropean_football_2",
  "159": "SELECT date\nFROM Player_Attributes\nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant')\nORDER BY crossing DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "160": "SELECT \"buildUpPlayPassingClass\" \nFROM Team_Attributes \nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id \nWHERE Team.team_long_name = 'FC Lorient' \nAND Team_Attributes.date = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
  "161": "SELECT defenceAggressionClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'Hannover 96'\nAND Team_Attributes.date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2",
  "162": "SELECT AVG(overall_rating) \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Marko Arnautovic') \nAND date BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
  "163": "ERROR: (sqlite3.OperationalError) no such column: player_name\n[SQL: SELECT ((SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013-07-12') - \n(SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Jordan Bowery' AND date = '2013-07-12')) * 100.0 / \n(SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Jordan Bowery' AND date = '2013-07-12') as percentage_higher;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\teuropean_football_2",
  "164": "SELECT player_name\nFROM Player\nWHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
  "165": "ERROR: (sqlite3.OperationalError) no such column: overall_rating\n[SQL: SELECT player_name\nFROM Player\nWHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\teuropean_football_2",
  "166": "SELECT DISTINCT p.player_name\nFROM Match m\nJOIN Player_Attributes pa ON m.home_player_X1 = pa.player_api_id\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.attacking_work_rate = 'high'\n\nUNION\n\nSELECT DISTINCT p.player_name\nFROM Match m\nJOIN Player_Attributes pa ON m.home_player_X2 = pa.player_api_id\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.attacking_work_rate = 'high'\n\nUNION\n\nSELECT DISTINCT p.player_name\nFROM Match m\nJOIN Player_Attributes pa ON m.home_player_X3 = pa.player_api_id\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.attacking_work_rate = 'high'\n\nUNION\n\nSELECT DISTINCT p.player_name\nFROM Match m\nJOIN Player_Attributes pa ON m.home_player_X4 = pa.player_api_id\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.attacking_work_rate = 'high'\n\nUNION\n\nSELECT DISTINCT p.player_name\nFROM Match m\nJOIN Player_Attributes pa ON m.home_player_X5 = pa.player_api_id\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.attacking_work_rate = 'high'\n\nUNION\n\nSELECT DISTINCT p.player_name\nFROM Match m\nJOIN Player_Attributes pa ON m.home_player_X6 = pa.player_api_id\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.attacking_work_rate = 'high'\n\nUNION\n\nSELECT DISTINCT p.player_name\nFROM Match m\nJOIN Player_Attributes pa ON m.home_player_X7 = pa.player_api_id\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.attacking_work_rate = 'high'\n\nUNION\n\nSELECT DISTINCT p.player_name\nFROM Match m\nJOIN Player_Attributes pa ON m.home_player_X8 = pa.player_api_id\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.attacking_work_rate = 'high'\n\nUNION\n\nSELECT DISTINCT p.player_name\nFROM Match m\nJOIN Player_Attributes pa ON m.home_player_X9 = pa.player_api_id\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.attacking_work_rate = 'high'\n\nUNION\n\nSELECT DISTINCT p.player_name\nFROM Match m\nJOIN Player_Attributes pa ON m.home_player_X10 = pa.player_api_id\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.attacking_work_rate = 'high'\n\nUNION\n\nSELECT DISTINCT p.player_name\nFROM Match m\nJOIN Player_Attributes pa ON m.home_player_X11 = pa.player_api_id\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
  "167": "SELECT team_short_name\nFROM Team\nJOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id\nWHERE chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
  "168": "SELECT COUNT(*) \nFROM Player \nWHERE player_name LIKE 'Aaron%' \nAND birthday > '1990-01-01'\t----- bird -----\teuropean_football_2",
  "169": "SELECT ABS(pa1.jumping - pa2.jumping) AS jumping_score_difference\nFROM Player_Attributes pa1\nJOIN Player_Attributes pa2 ON pa1.player_api_id = 6 AND pa2.player_api_id = 23;\t----- bird -----\teuropean_football_2",
  "170": "SELECT player_api_id\nFROM Player_Attributes\nWHERE preferred_foot = 'right'\nORDER BY potential\nLIMIT 4;\t----- bird -----\teuropean_football_2",
  "171": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) \nAND preferred_foot = 'left' \nAND attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
  "172": "SELECT home_team_goal, away_team_goal\nFROM Match\nWHERE date = '2008-09-24' AND league_id = 1;\t----- bird -----\teuropean_football_2",
  "173": "SELECT buildUpPlaySpeedClass\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE Team.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
  "174": "SELECT finishing, curve\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nWHERE weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
  "175": "SELECT Country.name AS country_name, COUNT(Match.id) AS num_games\nFROM Match\nJOIN League ON Match.league_id = League.id\nJOIN Country ON League.country_id = Country.id\nWHERE Match.season = '2015/2016'\nGROUP BY Country.name\nORDER BY num_games DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
  "176": "SELECT team_long_name\nFROM Team\nWHERE team_api_id = (\n    SELECT away_team_api_id\n    FROM Match\n    WHERE away_team_goal = (\n        SELECT MAX(away_team_goal)\n        FROM Match\n    )\n)\t----- bird -----\teuropean_football_2",
  "177": "SELECT player_name\nFROM Player_Attributes\nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id\nORDER BY strength DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
  "178": "ERROR: (sqlite3.OperationalError) no such column: height\n[SQL: SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes WHERE height < 180) \nFROM Player_Attributes \nWHERE height < 180 AND strength > 70;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\teuropean_football_2",
  "179": "SELECT drivers.driverRef\nFROM drivers\nJOIN qualifying ON drivers.driverId = qualifying.driverId\nWHERE qualifying.raceId = 20\nAND qualifying.q1 = 'DNQ'\t----- bird -----\tformula_1",
  "180": "SELECT d.surname\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId = 19\nAND q.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19);\t----- bird -----\tformula_1",
  "181": "SELECT races.name\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country = 'Germany';\t----- bird -----\tformula_1",
  "182": "SELECT lat, lng\nFROM circuits\nWHERE circuitRef = 'albert_park';\t----- bird -----\tformula_1",
  "183": "SELECT lat, lng\nFROM circuits\nWHERE name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
  "184": "SELECT q1\nFROM qualifying\nWHERE raceId = 354\nAND driverId = (SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna')\t----- bird -----\tformula_1",
  "185": "SELECT number\nFROM qualifying\nWHERE raceId = 903\nAND q3 = '0:01:54'\t----- bird -----\tformula_1",
  "186": "SELECT COUNT(*) \nFROM results \nWHERE \"raceId\" = 4 \nAND \"statusId\" != 1\t----- bird -----\tformula_1",
  "187": "SELECT drivers.forename, drivers.surname\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.raceId = 592 AND results.statusId = 1\nORDER BY drivers.dob ASC\nLIMIT 1;\t----- bird -----\tformula_1",
  "188": "SELECT d.forename, d.surname, d.url\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE lt.time = '0:01:27' AND lt.raceId = 161;\t----- bird -----\tformula_1",
  "189": "SELECT location, lat, lng\nFROM circuits\nWHERE name = 'Sepang International Circuit';\t----- bird -----\tformula_1",
  "190": "SELECT constructors.url\nFROM constructors\nJOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId\nWHERE constructorStandings.raceId = 9\nORDER BY constructorStandings.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
  "191": "SELECT d.code\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 45\nAND q.q3 = '0:01:33'\t----- bird -----\tformula_1",
  "192": "SELECT url\nFROM seasons\nWHERE year = (\n\tSELECT year\n\tFROM races\n\tWHERE raceId = 901\n)\t----- bird -----\tformula_1",
  "193": "ERROR: (sqlite3.OperationalError) no such column: dob\n[SQL: SELECT * \nFROM results \nWHERE raceId = 872 AND \"statusId\" = 1 \nORDER BY dob ASC \nLIMIT 1;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tformula_1",
  "194": "SELECT drivers.nationality\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.\"fastestLapSpeed\" = (SELECT MAX(results.\"fastestLapSpeed\") FROM results)\t----- bird -----\tformula_1",
  "195": "SELECT ((r1.\"fastestLapSpeed\" - r2.\"fastestLapSpeed\") / r2.\"fastestLapSpeed\") * 100\nFROM results r1\nJOIN results r2 ON r1.\"raceId\" = r2.\"raceId\" AND r1.\"driverId\" = r2.\"driverId\"\nWHERE r1.\"raceId\" = 853\nAND r1.\"driverId\" = (SELECT \"driverId\" FROM drivers WHERE \"driverRef\" = 'di_resta')\nAND r2.\"raceId\" = (SELECT MIN(\"raceId\") FROM results WHERE \"raceId\" > 853)\t----- bird -----\tformula_1",
  "196": "SELECT drivers.forename, drivers.surname, \n    COUNT(results.resultId) AS total_races,\n    SUM(CASE WHEN results.statusId = 1 THEN 1 ELSE 0 END) AS completed_races,\n    (SUM(CASE WHEN results.statusId = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(results.resultId)) AS completion_rate\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE races.date = '1983-07-16'\nGROUP BY drivers.forename, drivers.surname;\t----- bird -----\tformula_1",
  "197": "SELECT name\nFROM races\nWHERE date = (\n\tSELECT MIN(date)\n\tFROM races\n)\t----- bird -----\tformula_1",
  "198": "SELECT drivers.forename || ' ' || drivers.surname AS full_name\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId\nORDER BY driverStandings.points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
  "199": "SELECT drivers.forename, drivers.surname, races.name, lapTimes.time\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE lapTimes.time = (SELECT MIN(time) FROM lapTimes)\t----- bird -----\tformula_1",
  "200": "SELECT AVG(milliseconds) \nFROM lapTimes \nWHERE raceId = 2 \nAND driverId = 1\t----- bird -----\tformula_1",
  "201": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE year >= 2010) \nFROM results \nWHERE driverId = 1 AND raceId NOT IN (SELECT raceId FROM races WHERE circuitId = 2 AND year >= 2010)\t----- bird -----\tformula_1",
  "202": "SELECT drivers.forename, drivers.surname, drivers.nationality, MAX(driverStandings.wins), MAX(driverStandings.points)\nFROM drivers\nJOIN driverStandings ON drivers.driverId = driverStandings.driverId;\t----- bird -----\tformula_1",
  "203": "ERROR: (sqlite3.OperationalError) near \"FROM\": syntax error\n[SQL: SELECT MIN(year - EXTRACT(YEAR FROM dob)) AS age, forename || ' ' || surname AS name\nFROM drivers\nWHERE nationality = 'Japanese']\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tformula_1",
  "204": "SELECT races.name, circuits.name, circuits.location\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE races.date BETWEEN '2005-09-01' AND '2005-09-30'\t----- bird -----\tformula_1",
  "205": "SELECT races.name\nFROM races\nJOIN results ON races.raceId = results.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.surname = 'Yoong' AND drivers.forename = 'Alex' AND results.position < 20;\t----- bird -----\tformula_1",
  "206": "SELECT races.name, races.year\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.surname = 'Schumacher' AND drivers.forename = 'Michael'\nORDER BY results.\"fastestLap\" ASC\nLIMIT 1;\t----- bird -----\tformula_1",
  "207": "SELECT races.name, results.points\nFROM races\nJOIN results ON races.raceId = results.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\nORDER BY races.date\nLIMIT 1;\t----- bird -----\tformula_1",
  "208": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE country = 'Germany')) \nFROM races \nWHERE circuitId IN (SELECT circuitId FROM circuits WHERE country = 'Germany') \nAND name LIKE '%European Grand Prix%';\t----- bird -----\tformula_1",
  "209": "SELECT lat, lng\nFROM circuits\nWHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
  "210": "SELECT circuitRef\nFROM circuits\nWHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
  "211": "SELECT d.nationality\nFROM drivers d\nWHERE dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
  "212": "SELECT drivers.driverRef\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.position = 1;\t----- bird -----\tformula_1",
  "213": "SELECT races.name\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.surname = 'Hamilton'\nORDER BY results.position\nLIMIT 1;\t----- bird -----\tformula_1",
  "214": "SELECT MAX(\"fastestLapSpeed\") \nFROM results \nWHERE \"raceId\" = 4;\t----- bird -----\tformula_1",
  "215": "SELECT rank\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.surname = 'Hamilton'\nAND races.year = 2008\nAND races.name = 'Chinese Grand Prix'\t----- bird -----\tformula_1",
  "216": "SELECT time\nFROM results\nWHERE raceId = (\n\tSELECT raceId\n\tFROM races\n\tWHERE year = 2008\n\tAND name = 'Australian Grand Prix'\n)\nAND position = 2;\t----- bird -----\tformula_1",
  "217": "SELECT COUNT(DISTINCT driverId) \nFROM results \nWHERE raceId = 3 \nAND positionText = '1' \nAND statusId = 1\t----- bird -----\tformula_1",
  "218": "SELECT ((r1.\"milliseconds\" - r2.\"milliseconds\") / r2.\"milliseconds\") * 100 AS speed_difference_percentage\nFROM results r1\nJOIN results r2 ON r1.\"raceId\" = r2.\"raceId\"\nWHERE r1.\"position\" = 1\nAND r2.\"position\" = (SELECT MAX(\"position\") FROM results WHERE \"raceId\" = 1)\t----- bird -----\tformula_1",
  "219": "SELECT COUNT(*) \nFROM circuits \nWHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
  "220": "SELECT MAX(points) \nFROM constructorStandings \nWHERE constructorId IN (SELECT constructorId FROM constructors WHERE nationality = 'British')\t----- bird -----\tformula_1",
  "221": "SELECT constructors.name\nFROM constructors\nLEFT JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId\nWHERE constructorResults.points = 0 AND constructorResults.raceId = 291;\t----- bird -----\tformula_1",
  "222": "SELECT COUNT(DISTINCT c.\"constructorId\")\nFROM \"constructorStandings\" cs\nJOIN constructors c ON cs.\"constructorId\" = c.\"constructorId\"\nWHERE cs.points = 0\nAND cs.\"raceId\" IN (SELECT \"raceId\" FROM races WHERE year = 2009 AND round IN (2, 3));\t----- bird -----\tformula_1",
  "223": "SELECT COUNT(DISTINCT r.\"raceId\") * 100.0 / (SELECT COUNT(DISTINCT r.\"raceId\") \nFROM races r \nWHERE r.year BETWEEN 2007 AND 2009) AS race_completion_percentage\nFROM results res\nJOIN drivers d ON res.\"driverId\" = d.\"driverId\"\nJOIN races r ON res.\"raceId\" = r.\"raceId\"\nWHERE d.nationality = 'Japanese' AND r.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
  "224": "SELECT AVG(STRFTIME('%s', results.time)) AS average_time_seconds\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN seasons ON races.year = seasons.year\nWHERE seasons.year < 1975\t----- bird -----\tformula_1",
  "225": "SELECT \"fastestLap\" \nFROM results \nWHERE raceId IN (\n    SELECT raceId \n    FROM races \n    WHERE year = 2009\n) \nAND position = 1;\t----- bird -----\tformula_1",
  "226": "SELECT AVG(CAST(\"fastestLapSpeed\" AS REAL)) \nFROM results \nWHERE \"raceId\" = 4\t----- bird -----\tformula_1",
  "227": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM drivers WHERE dob < '1985-01-01') AS percentage\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nWHERE drivers.dob < '1985-01-01' AND lap > 50\nAND lapTimes.raceId IN (SELECT raceId FROM races WHERE year BETWEEN 2000 AND 2005)\t----- bird -----\tformula_1",
  "228": "SELECT COUNT(*) \nFROM drivers d \nJOIN lapTimes lt ON d.driverId = lt.driverId \nWHERE d.nationality = 'French' AND lt.time < '02:00.00'\t----- bird -----\tformula_1",
  "229": "SELECT * FROM drivers WHERE nationality = 'American';\t----- bird -----\tformula_1",
  "230": "SELECT \"driverId\", \"forename\", \"surname\", \"dob\", \"nationality\"\nFROM drivers\nORDER BY dob DESC\nLIMIT 3;\t----- bird -----\tformula_1",
  "231": "SELECT driverRef\nFROM drivers\nWHERE nationality = 'German'\nORDER BY dob\nLIMIT 1;\t----- bird -----\tformula_1",
  "232": "ERROR: (sqlite3.OperationalError) ambiguous column name: driverId\n[SQL: SELECT driverId, code\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE dob LIKE '1971%'\nAND fastestLapTime = (\n    SELECT MIN(fastestLapTime)\n    FROM results\n)]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tformula_1",
  "233": "SELECT COUNT(*) \nFROM results \nWHERE raceId BETWEEN 50 AND 100 \nAND statusId = 2;\t----- bird -----\tformula_1",
  "234": "SELECT COUNT(*) AS times_held, location, lat, lng\nFROM circuits\nWHERE country = 'Austria';\t----- bird -----\tformula_1",
  "235": "SELECT races.year, drivers.forename, drivers.surname, races.name, races.date, races.time\nFROM qualifying\nJOIN races ON qualifying.raceId = races.raceId\nJOIN drivers ON qualifying.driverId = drivers.driverId\nWHERE drivers.dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
  "236": "SELECT drivers.forename, drivers.surname\nFROM drivers\nJOIN pitStops ON drivers.driverId = pitStops.driverId\nWHERE drivers.nationality = 'German' \nAND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY drivers.driverId\nORDER BY AVG(pitStops.milliseconds) ASC\nLIMIT 3;\t----- bird -----\tformula_1",
  "237": "SELECT drivers.forename, drivers.surname, results.time\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE races.name = 'Canadian Grand Prix' AND races.year = 2008 AND results.position = 1;\t----- bird -----\tformula_1",
  "238": "SELECT constructors.constructorRef, constructors.url\nFROM constructors\nJOIN results ON constructors.constructorId = results.constructorId\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Singapore Grand Prix' AND races.year = 2009 AND results.position = 1;\t----- bird -----\tformula_1",
  "239": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
  "240": "SELECT c.name, c.nationality, SUM(cr.points) AS total_points\nFROM constructorResults cr\nJOIN constructors c ON cr.constructorId = c.constructorId\nJOIN races r ON cr.raceId = r.raceId\nWHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010\nGROUP BY c.name, c.nationality\nORDER BY total_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
  "241": "SELECT CONCAT(d.forename, ' ', d.surname) AS \"Full Name\"\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nJOIN races r ON q.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE r.year = 2008\nAND r.name = 'Marina Bay Street Circuit'\nAND q.position = 1\nAND r.round = 3;\t----- bird -----\tformula_1",
  "242": "SELECT forename || ' ' || surname AS \"Full Name\", nationality, races.name AS \"First Race\"\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
  "243": "SELECT COUNT(*) \nFROM results \nWHERE raceId = (SELECT raceId \n                FROM races \n                WHERE name = 'Canadian Grand Prix') \nAND statusId = (SELECT statusId \n                FROM status \n                WHERE status = 'Accident') \nAND driverId = (SELECT driverId \n                FROM results \n                WHERE raceId = (SELECT raceId \n                                FROM races \n                                WHERE name = 'Canadian Grand Prix') \n                GROUP BY driverId \n                ORDER BY COUNT(*) DESC \n                LIMIT 1)\t----- bird -----\tformula_1",
  "244": "SELECT drivers.forename, drivers.surname\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nWHERE results.fastestLapTime = (\n    SELECT MIN(results.fastestLapTime)\n    FROM results\n)\nLIMIT 20;\t----- bird -----\tformula_1",
  "245": "SELECT circuits.name, circuits.location, circuits.country, lapTimes.time\nFROM circuits\nJOIN races ON circuits.circuitId = races.circuitId\nJOIN lapTimes ON races.raceId = lapTimes.raceId\nWHERE circuits.country = 'Italy'\nORDER BY lapTimes.milliseconds ASC\nLIMIT 1;\t----- bird -----\tformula_1",
  "246": "SELECT COUNT(*) \nFROM superhero \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE superpower.power_name = 'Super Strength' \nAND superhero.height_cm > 200\t----- bird -----\tsuperhero",
  "247": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nJOIN hero_power ON superhero.id = hero_power.hero_id \nJOIN superpower ON hero_power.power_id = superpower.id \nWHERE colour.colour = 'Blue' \nAND superpower.power_name = 'Agility'\t----- bird -----\tsuperhero",
  "248": "SELECT superhero_name\nFROM superhero\nWHERE eye_colour_id = 2\nAND hair_colour_id = 3;\t----- bird -----\tsuperhero",
  "249": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'ABC Studios'\nORDER BY superhero.height_cm DESC;\t----- bird -----\tsuperhero",
  "250": "SELECT c.colour, COUNT(*) AS eye_color_popularity\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics'\nGROUP BY c.colour\nORDER BY eye_color_popularity DESC;\t----- bird -----\tsuperhero",
  "251": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE publisher.publisher_name = 'ABC Studios'\nAND superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
  "252": "SELECT publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.id = (\n    SELECT id\n    FROM superhero\n    ORDER BY height_cm DESC\n    LIMIT 1\n)\t----- bird -----\tsuperhero",
  "253": "SELECT COUNT(*) \nFROM superhero \nWHERE eye_colour_id = 2 \nAND publisher_id = 2;\t----- bird -----\tsuperhero",
  "254": "SELECT superhero_name\nFROM superhero\nWHERE id = (\n\tSELECT hero_id\n\tFROM hero_attribute\n\tWHERE attribute_id = 1\n\tORDER BY attribute_value\n\tLIMIT 1\n)\t----- bird -----\tsuperhero",
  "255": "SELECT race.race\nFROM superhero\nJOIN race ON superhero.race_id = race.id\nWHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
  "256": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nWHERE hero_attribute.attribute_id = 1\nAND hero_attribute.attribute_value < 50;\t----- bird -----\tsuperhero",
  "257": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
  "258": "SELECT COUNT(*) \nFROM superhero s \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nJOIN gender g ON s.gender_id = g.id \nWHERE g.gender = 'Female' AND a.attribute_name = 'Strength' AND ha.attribute_value = 100\t----- bird -----\tsuperhero",
  "259": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage\nFROM superhero\nWHERE alignment_id = 1;\t----- bird -----\tsuperhero",
  "260": "SELECT publisher_name, COUNT(*) AS total_superheroes\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher_name IN ('DC Comics', 'Marvel Comics')\nGROUP BY publisher_name;\t----- bird -----\tsuperhero",
  "261": "SELECT id\nFROM publisher\nWHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
  "262": "SELECT COUNT(*) \nFROM superhero \nWHERE full_name IS NULL\t----- bird -----\tsuperhero",
  "263": "SELECT AVG(weight_kg) \nFROM superhero \nWHERE gender_id = 2;\t----- bird -----\tsuperhero",
  "264": "ERROR: Error code: 429 - {'error': {'code': '429', 'message': 'Requests to the ChatCompletions_Create Operation under Azure OpenAI API version 2024-12-01-preview have exceeded token rate limit of your current OpenAI S0 pricing tier. Please retry after 2 seconds. Please go here: https://aka.ms/oai/quotaincrease if you would like to further increase the default rate limit. For Free Account customers, upgrade to Pay as you Go here: https://aka.ms/429TrialUpgrade.'}}\t----- bird -----\tsuperhero",
  "265": "SELECT superhero_name\nFROM superhero\nWHERE height_cm BETWEEN 170 AND 190\nAND eye_colour_id = 1;\t----- bird -----\tsuperhero",
  "266": "SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.hair_colour_id = colour.id\nWHERE superhero.height_cm = 185\nAND superhero.race_id = 1;\t----- bird -----\tsuperhero",
  "267": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180) \nFROM superhero \nWHERE height_cm BETWEEN 150 AND 180 \nAND publisher_id = 2;\t----- bird -----\tsuperhero",
  "268": "SELECT superhero_name\nFROM superhero\nWHERE gender_id = 1\nAND weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
  "269": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.id = 1;\t----- bird -----\tsuperhero",
  "270": "SELECT COUNT(*) \nFROM superhero \nWHERE id IN (\n\tSELECT hero_id \n\tFROM hero_power \n\tWHERE power_id = (\n\t\tSELECT id \n\t\tFROM superpower \n\t\tWHERE power_name = 'Stealth'\n\t)\n)\t----- bird -----\tsuperhero",
  "271": "SELECT superhero.full_name\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE attribute.attribute_name = 'Strength'\nORDER BY hero_attribute.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
  "272": "SELECT superhero.superhero_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nJOIN alignment ON superhero.alignment_id = alignment.id\nJOIN superpower ON superhero.id = superpower.id\nWHERE publisher.publisher_name = 'Dark Horse Comics'\nAND superpower.power_name = 'Durability'\nORDER BY superhero.weight_kg DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
  "273": "SELECT colour.colour AS eye_colour, colour_1.colour AS hair_colour, colour_2.colour AS skin_colour\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id\nJOIN colour ON superhero.eye_colour_id = colour.id\nJOIN colour AS colour_1 ON superhero.hair_colour_id = colour_1.id\nJOIN colour AS colour_2 ON superhero.skin_colour_id = colour_2.id\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
  "274": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.eye_colour_id = s.hair_colour_id\nAND s.eye_colour_id = s.skin_colour_id;\t----- bird -----\tsuperhero",
  "275": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = 2) \nFROM superhero \nWHERE gender_id = 2 AND eye_colour_id = 2;\t----- bird -----\tsuperhero",
  "276": "SELECT COUNT(*) \nFROM hero_power \nWHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo')\t----- bird -----\tsuperhero",
  "277": "SELECT height_cm\nFROM superhero\nWHERE eye_colour_id = 2;\t----- bird -----\tsuperhero",
  "278": "SELECT superhero_name\nFROM superhero\nWHERE eye_colour_id = 3 AND hair_colour_id = 3;\t----- bird -----\tsuperhero",
  "279": "SELECT superhero_name\nFROM superhero\nWHERE alignment_id = 3;\t----- bird -----\tsuperhero",
  "280": "SELECT COUNT(*) \nFROM hero_attribute \nWHERE attribute_id = 2 \nAND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = 2)\t----- bird -----\tsuperhero",
  "281": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = 2) \nFROM superhero \nWHERE gender_id = 2 AND publisher_id = 2;\t----- bird -----\tsuperhero",
  "282": "SELECT (SELECT weight_kg FROM superhero WHERE superhero_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE superhero_name = 'Charles Chandler') as weight_difference;\t----- bird -----\tsuperhero",
  "283": "SELECT AVG(height_cm) FROM superhero\t----- bird -----\tsuperhero",
  "284": "SELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
  "285": "SELECT superhero_name\nFROM superhero\nWHERE id = (\n\tSELECT hero_id\n\tFROM hero_attribute\n\tWHERE attribute_id = 3\n\tORDER BY attribute_value DESC\n\tLIMIT 1\n)\t----- bird -----\tsuperhero",
  "286": "SELECT attribute.attribute_name, hero_attribute.attribute_value\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
  "287": "SELECT * \nFROM superhero \nWHERE eye_colour_id = 2 AND hair_colour_id = 3\t----- bird -----\tsuperhero",
  "288": "SELECT superhero.superhero_name, publisher.publisher_name\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
  "289": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 2) AS percentage_blue_eyes\nFROM superhero\nWHERE eye_colour_id = 2;\t----- bird -----\tsuperhero",
  "290": "SELECT \n    COUNT(CASE WHEN gender_id = 1 THEN 1 END) AS male_count,\n    COUNT(CASE WHEN gender_id = 2 THEN 1 END) AS female_count,\n    COUNT(*) AS total_count,\n    COUNT(CASE WHEN gender_id = 1 THEN 1 END) / COUNT(CASE WHEN gender_id = 2 THEN 1 END) AS gender_ratio\nFROM superhero;\t----- bird -----\tsuperhero",
  "291": "SELECT colour.colour\nFROM superhero\nJOIN colour ON superhero.eye_colour_id = colour.id\nWHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
  "292": "SELECT COUNT(*) AS weight_missing_superheroes\nFROM superhero\nWHERE weight_kg IS NULL\nAND (eye_colour_id = 2 OR eye_colour_id = 1);\t----- bird -----\tsuperhero",
  "293": "SELECT COUNT(*) \nFROM superhero \nWHERE skin_colour_id = 3;\t----- bird -----\tsuperhero",
  "294": "SELECT superhero.superhero_name\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Wind Control'\nORDER BY superhero.superhero_name ASC;\t----- bird -----\tsuperhero",
  "295": "SELECT gender.gender\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE superpower.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
  "296": "SELECT \n    publisher_name,\n    COUNT(*) AS total_superheroes\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher_name = 'DC Comics' OR publisher_name = 'Marvel Comics'\nGROUP BY publisher_name;\t----- bird -----\tsuperhero",
  "297": "SELECT DisplayName\nFROM users\nWHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon'\nORDER BY Reputation DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
  "298": "ERROR: Error code: 400 - {'error': {'message': \"This model's maximum context length is 16385 tokens. However, your messages resulted in 28669 tokens. Please reduce the length of the messages.\", 'type': 'invalid_request_error', 'param': 'messages', 'code': 'context_length_exceeded'}}\t----- bird -----\tcodebase_community",
  "299": "SELECT COUNT(*) \nFROM users \nWHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
  "300": "SELECT u.DisplayName\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE p.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
  "301": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId = (\n\tSELECT Id \n\tFROM users \n\tWHERE DisplayName = 'csgillespie'\n)\t----- bird -----\tcodebase_community",
  "302": "ERROR: (sqlite3.OperationalError) no such column: UserDisplayName\n[SQL: SELECT UserDisplayName\nFROM posts\nWHERE Title = 'Examples for teaching: Correlation does not mean causation']\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tcodebase_community",
  "303": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId IN (SELECT Id FROM users WHERE Age > 60) \nAND Score > 19;\t----- bird -----\tcodebase_community",
  "304": "SELECT Body\nFROM posts\nWHERE Id = (SELECT ExcerptPostId\n            FROM tags\n            WHERE TagName = 'bayesian')\t----- bird -----\tcodebase_community",
  "305": "SELECT AVG(p.Score)\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
  "306": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE Score > 5) \nFROM posts \nWHERE Score > 5 AND OwnerUserId IN (SELECT Id FROM users WHERE Age > 60)\t----- bird -----\tcodebase_community",
  "307": "SELECT FavoriteCount\nFROM posts\nWHERE Id IN (\n    SELECT PostId\n    FROM comments\n    WHERE UserId = 3025\n    AND CreationDate = '2014-04-23 20:29:39'\n)\t----- bird -----\tcodebase_community",
  "308": "SELECT * \nFROM comments \nWHERE UserId = 23853 \nAND CreationDate = '2013-07-12 09:08:18'\t----- bird -----\tcodebase_community",
  "309": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Tiago Pasqualini')\t----- bird -----\tcodebase_community",
  "310": "SELECT \"UserDisplayName\"\nFROM \"postHistory\"\nWHERE \"Id\" = 6347;\t----- bird -----\tcodebase_community",
  "311": "SELECT COUNT(posts.Id) / COUNT(votes.Id) AS post_to_vote_ratio\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nJOIN votes ON posts.Id = votes.PostId\nWHERE users.Id = 24;\t----- bird -----\tcodebase_community",
  "312": "SELECT ViewCount\nFROM posts\nWHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
  "313": "SELECT * FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
  "314": "SELECT UserDisplayName\nFROM comments\nWHERE Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
  "315": "SELECT u.DisplayName, u.Reputation\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE p.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
  "316": "SELECT u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Open source tools for visualizing multi-dimensional data?'\t----- bird -----\tcodebase_community",
  "317": "SELECT Text\nFROM comments\nWHERE PostId = (\n\tSELECT Id\n\tFROM posts\n\tWHERE Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\n)\t----- bird -----\tcodebase_community",
  "318": "SELECT users.DisplayName\nFROM users\nJOIN votes ON users.Id = votes.UserId\nJOIN posts ON votes.PostId = posts.Id\nWHERE posts.Title LIKE '%variance%'\nAND votes.BountyAmount = 50;\t----- bird -----\tcodebase_community",
  "319": "SELECT p.Title, c.Text\nFROM posts p\nJOIN postLinks pl ON p.Id = pl.PostId\nJOIN tags t ON pl.RelatedPostId = t.Id\nJOIN comments c ON p.Id = c.PostId\nWHERE t.TagName = 'humor'\nGROUP BY p.Id\nHAVING AVG(p.ViewCount)\t----- bird -----\tcodebase_community",
  "320": "SELECT COUNT(*) \nFROM badges \nGROUP BY UserId \nHAVING COUNT(*) > 5;\t----- bird -----\tcodebase_community",
  "321": "SELECT DISTINCT u.DisplayName\nFROM users u\nJOIN postHistory ph ON u.Id = ph.UserId\nJOIN posts p ON ph.PostId = p.Id\nWHERE p.ViewCount >= 1000\nGROUP BY u.Id\nHAVING COUNT(ph.PostId) = 1;\t----- bird -----\tcodebase_community",
  "322": "ERROR: (sqlite3.OperationalError) no such column: badges_2011\n[SQL: SELECT \n    COUNT(*) AS total_badges,\n    SUM(CASE WHEN strftime('%Y', Date) = '2010' THEN 1 ELSE 0 END) AS badges_2010,\n    SUM(CASE WHEN strftime('%Y', Date) = '2011' THEN 1 ELSE 0 END) AS badges_2011,\n    ((badges_2011 - badges_2010) * 100.0 / total_badges) AS percentage_difference\nFROM badges;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tcodebase_community",
  "323": "SELECT AVG(u.UpVotes) AS AvgUpVotes, AVG(u.Age) AS AvgAge\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nGROUP BY u.Id\nHAVING COUNT(p.Id) > 10;\t----- bird -----\tcodebase_community",
  "324": "SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM votes WHERE CreationDate BETWEEN '2010-01-01' AND '2010-12-31') AS ratio_2010,\nCOUNT(*) * 1.0 / (SELECT COUNT(*) FROM votes WHERE CreationDate BETWEEN '2011-01-01' AND '2011-12-31') AS ratio_2011\nFROM votes\nWHERE CreationDate BETWEEN '2010-01-01' AND '2011-12-31'\t----- bird -----\tcodebase_community",
  "325": "SELECT Id\nFROM posts\nWHERE OwnerUserId = 8\nORDER BY AnswerCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
  "326": "SELECT p.OwnerUserId, SUM(p.Score) AS TotalScore\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\nGROUP BY p.OwnerUserId\nORDER BY TotalScore DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
  "327": "SELECT DISTINCT t.TagName\nFROM posts p\nJOIN tags t ON p.Tags LIKE '%' || t.TagName || '%'\nLEFT JOIN comments c ON p.Id = c.PostId\nWHERE p.OwnerUserId = (\n\tSELECT Id\n\tFROM users\n\tWHERE DisplayName = 'Mark Meckes'\n)\nAND c.Id IS NULL;\t----- bird -----\tcodebase_community",
  "328": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE OwnerUserId = -1) AS Percentage\nFROM posts\nWHERE OwnerUserId = -1\nAND Body LIKE '%R%'\t----- bird -----\tcodebase_community",
  "329": "SELECT (SELECT SUM(ViewCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Mornington')) - \n(SELECT SUM(ViewCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Amos')) AS ViewCountDifference;\t----- bird -----\tcodebase_community",
  "330": "SELECT AVG(monthly_link_count) AS average_monthly_links_created\nFROM (\n    SELECT strftime('%m', pl.CreationDate) AS month,\n           COUNT(pl.Id) AS monthly_link_count\n    FROM postLinks pl\n    JOIN posts p ON pl.PostId = p.Id\n    WHERE p.CreaionDate LIKE '2010%'\n    AND p.AnswerCount <= 2\n    GROUP BY month\n) subquery;\t----- bird -----\tcodebase_community",
  "331": "ERROR: (sqlite3.OperationalError) ambiguous column name: CreationDate\n[SQL: SELECT MIN(CreationDate) \nFROM votes \nJOIN users ON votes.UserId = users.Id \nWHERE users.DisplayName = 'chl']\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tcodebase_community",
  "332": "SELECT u.DisplayName\nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE b.Name = 'Autobiographer'\nORDER BY b.Date\nLIMIT 1;\t----- bird -----\tcodebase_community",
  "333": "SELECT COUNT(DISTINCT u.Id)\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE u.Location = 'United Kingdom'\nAND p.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
  "334": "SELECT Id, Title\nFROM posts\nWHERE OwnerUserId = (\n    SELECT Id\n    FROM users\n    WHERE DisplayName = 'Harvey Motulsky'\n)\nORDER BY ViewCount DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
  "335": "ERROR: (sqlite3.OperationalError) no such column: UserDisplayName\n[SQL: SELECT Id, UserDisplayName\nFROM posts\nWHERE Score = (SELECT MAX(Score) FROM posts WHERE CreaionDate LIKE '2010%')]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tcodebase_community",
  "336": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE OwnerUserId IN (SELECT Id FROM users WHERE Reputation > 1000 AND CreationDate LIKE '2011%')) FROM posts WHERE OwnerUserId IN (SELECT Id FROM users WHERE Reputation > 1000 AND CreationDate LIKE '2011%')\t----- bird -----\tcodebase_community",
  "337": "SELECT SUM(ViewCount) AS TotalViews, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Computer Game Datasets';\t----- bird -----\tcodebase_community",
  "338": "SELECT COUNT(*) \nFROM comments \nWHERE PostId = (\n    SELECT Id \n    FROM posts \n    WHERE Score = (\n        SELECT MAX(Score) \n        FROM posts\n    )\n)\t----- bird -----\tcodebase_community",
  "339": "SELECT Text, UserDisplayName\nFROM comments\nWHERE PostId = (\n\tSELECT Id\n\tFROM posts\n\tWHERE Title = 'Analysing wind data with R'\n)\nORDER BY CreationDate DESC\nLIMIT 10;\t----- bird -----\tcodebase_community",
  "340": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1)) \nFROM posts \nWHERE OwnerUserId = (SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1) \nAND Score > 50;\t----- bird -----\tcodebase_community",
  "341": "SELECT ExcerptPostId, WikiPostId\nFROM tags\nWHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
  "342": "SELECT u.Reputation, u.UpVotes\nFROM users u\nJOIN comments c ON u.Id = c.UserId\nWHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
  "343": "SELECT Text\nFROM comments\nWHERE PostId IN (\n    SELECT Id\n    FROM posts\n    WHERE ViewCount BETWEEN 100 AND 150\n)\nORDER BY Score DESC\nLIMIT 1;\t----- bird -----\tcodebase_community",
  "344": "SELECT COUNT(*) \nFROM comments \nWHERE PostId IN (\n    SELECT Id \n    FROM posts \n    WHERE CommentCount = 1\n) \nAND Score = 0;\t----- bird -----\tcodebase_community",
  "345": "ERROR: (sqlite3.OperationalError) no such column: UpVotes\n[SQL: SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM comments WHERE Score BETWEEN 5 AND 10) AS Percentage\nFROM comments\nWHERE Score BETWEEN 5 AND 10\nAND UpVotes = 0;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tcodebase_community",
  "346": "ERROR: Error code: 400 - {'error': {'message': \"This model's maximum context length is 16385 tokens. However, your messages resulted in 3940178 tokens. Please reduce the length of the messages.\", 'type': 'invalid_request_error', 'param': 'messages', 'code': 'context_length_exceeded'}}\t----- bird -----\tcard_games",
  "347": "ERROR: Error code: 400 - {'error': {'message': \"This model's maximum context length is 16385 tokens. However, your messages resulted in 53938 tokens. Please reduce the length of the messages.\", 'type': 'invalid_request_error', 'param': 'messages', 'code': 'context_length_exceeded'}}\t----- bird -----\tcard_games",
  "348": "SELECT c.name\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.format = 'gladiator' AND c.rarity = 'mythic' AND l.status = 'Banned'\t----- bird -----\tcard_games",
  "349": "SELECT legalities.status\nFROM legalities\nJOIN cards ON legalities.uuid = cards.uuid\nWHERE cards.type = 'Artifact'\nAND cards.\"otherFaceIds\" IS NULL\nAND legalities.format = 'vintage'\t----- bird -----\tcard_games",
  "350": "SELECT c.id, c.artist\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.power = 'None' AND l.format = 'commander'\t----- bird -----\tcard_games",
  "351": "SELECT c.name, r.text, \n    c.hasAlternativeDeckLimit, c.hasContentWarning, c.hasFoil, c.hasNonFoil, c.isAlternative, c.isFullArt, c.isOnlineOnly, c.isOversized, c.isPromo, c.isReprint, c.isReserved, c.isStarter, c.isStorySpotlight, c.isTextless, c.isTimeshifted\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Stephen Daniel'\t----- bird -----\tcard_games",
  "352": "SELECT c.name, c.artist, COUNT(r.id) AS ruling_count, c.isPromo\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nGROUP BY c.name, c.artist, c.isPromo\nORDER BY ruling_count DESC\nLIMIT 1;\t----- bird -----\tcard_games",
  "353": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) \nFROM cards \nWHERE id IN (SELECT id FROM foreign_data WHERE language = 'Chinese Simplified');\t----- bird -----\tcard_games",
  "354": "SELECT COUNT(*) \nFROM cards \nWHERE power = 'Infinite'\t----- bird -----\tcard_games",
  "355": "ERROR: (sqlite3.OperationalError) near \"s\": syntax error\n[SQL: SELECT \"borderColor\" FROM cards WHERE name = 'Ancestor\\'s Chosen';]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tcard_games",
  "356": "SELECT text\nFROM foreign_data\nWHERE name = 'Benalish Knight';\t----- bird -----\tcard_games",
  "357": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) AS percentage\nFROM cards\nWHERE \"borderColor\" = 'borderless';\t----- bird -----\tcard_games",
  "358": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE \"isStorySpotlight\" = 1) AS percentage\nFROM cards\nWHERE \"isStorySpotlight\" = 1\nAND id IN (SELECT id FROM foreign_data WHERE language = 'French')\t----- bird -----\tcard_games",
  "359": "SELECT COUNT(*) \nFROM cards \nWHERE \"originalType\" = 'Summon - Angel' \nAND subtypes != 'Angel'\t----- bird -----\tcard_games",
  "360": "SELECT id\nFROM cards\nWHERE duelDeck = 'a';\t----- bird -----\tcard_games",
  "361": "SELECT COUNT(*) \nFROM cards \nWHERE \"borderColor\" = 'white' \nAND id IN (\n\tSELECT id \n\tFROM legalities \n\tWHERE status = 'Banned'\n)\t----- bird -----\tcard_games",
  "362": "SELECT c.name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.colors LIKE '%B%' \nAND fd.language <> 'English' \nAND c.types LIKE '%Artifact%'\t----- bird -----\tcard_games",
  "363": "ERROR: Error code: 400 - {'error': {'message': \"This model's maximum context length is 16385 tokens. However, your messages resulted in 82863 tokens. Please reduce the length of the messages.\", 'type': 'invalid_request_error', 'param': 'messages', 'code': 'context_length_exceeded'}}\t----- bird -----\tcard_games",
  "364": "SELECT id\nFROM cards\nWHERE \"isStorySpotlight\" = 1 AND \"text\" IS NULL;\t----- bird -----\tcard_games",
  "365": "SELECT COUNT(*) \nFROM set_translations \nWHERE language = 'Brazilian Portuguese' \nAND \"setCode\" IN (\n    SELECT code \n    FROM sets \n    WHERE block = 'Commander'\n)\t----- bird -----\tcard_games",
  "366": "ERROR: Error code: 400 - {'error': {'message': \"This model's maximum context length is 16385 tokens. However, your messages resulted in 30491 tokens. Please reduce the length of the messages.\", 'type': 'invalid_request_error', 'param': 'messages', 'code': 'context_length_exceeded'}}\t----- bird -----\tcard_games",
  "367": "SELECT COUNT(*) \nFROM cards \nWHERE power = 'Unknown' \nAND flavorText LIKE '%triggered ability%'\t----- bird -----\tcard_games",
  "368": "SELECT COUNT(*) \nFROM cards \nJOIN legalities ON cards.uuid = legalities.uuid \nJOIN rulings ON cards.uuid = rulings.uuid \nWHERE legalities.format = 'pre-modern' \nAND rulings.text = 'This is a triggered mana ability.' \nAND cards.\"otherFaceIds\" IS NULL;\t----- bird -----\tcard_games",
  "369": "SELECT foreign_data.name\nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nWHERE cards.artist = 'Matthew D. Wilson'\nAND cards.layout = 'normal'\nAND cards.\"borderColor\" = 'black'\nAND cards.type LIKE '%Creature%'\nAND foreign_data.language = 'French';\t----- bird -----\tcard_games",
  "370": "SELECT language\nFROM set_translations\nWHERE \"setCode\" = 'RAV'\nLIMIT 1;\t----- bird -----\tcard_games",
  "371": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM legalities WHERE format = 'commander' AND status = 'Legal') AS percentage\nFROM cards\nWHERE uuid IN (SELECT uuid FROM legalities WHERE format = 'commander' AND status = 'Legal')\nAND hasContentWarning = 0;\t----- bird -----\tcard_games",
  "372": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL) \nFROM cards \nWHERE power IS NULL \nAND uuid IN (SELECT uuid FROM foreign_data WHERE language = 'French')\t----- bird -----\tcard_games",
  "373": "SELECT language\nFROM foreign_data\nWHERE multiverseid = 149934;\t----- bird -----\tcard_games",
  "374": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) AS proportion\nFROM cards\nWHERE layout != 'normal' OR layout IS NULL;\t----- bird -----\tcard_games",
  "375": "SELECT language\nFROM set_translations\nWHERE \"setCode\" = 'ARC'\t----- bird -----\tcard_games",
  "376": "SELECT language\nFROM foreign_data\nWHERE name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
  "377": "SELECT name, \"convertedManaCost\" FROM cards WHERE name = 'Serra Angel' OR name = 'Shrine Keeper' ORDER BY \"convertedManaCost\" DESC LIMIT 1;\t----- bird -----\tcard_games",
  "378": "SELECT translation\nFROM set_translations\nWHERE \"setCode\" = (\n    SELECT \"parentCode\"\n    FROM sets\n    WHERE code = (\n        SELECT \"setCode\"\n        FROM cards\n        WHERE name = \"Ancestor's Chosen\"\n    )\n) AND language = 'Italian';\t----- bird -----\tcard_games",
  "379": "ERROR: (sqlite3.OperationalError) near \"s\": syntax error\n[SQL: SELECT * \nFROM foreign_data \nWHERE name = 'Ancestor\\'s Chosen' AND language = 'Korean';]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tcard_games",
  "380": "SELECT COUNT(*) \nFROM cards \nWHERE \"setCode\" = '10E' \nAND artist = 'Adam Rex';\t----- bird -----\tcard_games",
  "381": "SELECT translation\nFROM set_translations\nWHERE \"setCode\" = '8ED' AND language = 'Chinese Simplified'\t----- bird -----\tcard_games",
  "382": "SELECT * FROM cards WHERE name = 'Angel of Mercy' AND isOnlineOnly = 1;\t----- bird -----\tcard_games",
  "383": "SELECT COUNT(*) \nFROM sets \nWHERE block = 'Ice Age' \nAND code IN (\n\tSELECT \"setCode\" \n\tFROM set_translations \n\tWHERE language = 'Italian'\n)\t----- bird -----\tcard_games",
  "384": "SELECT c.name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE fd.name = 'Adarkar Valkyrie'\nAND fd.language != 'English'\t----- bird -----\tcard_games",
  "385": "SELECT COUNT(*) \nFROM sets \nWHERE code IN (\n    SELECT \"setCode\" \n    FROM set_translations \n    WHERE language = 'Italian'\n) AND \"baseSetSize\" < 100;\t----- bird -----\tcard_games",
  "386": "SELECT DISTINCT artist\nFROM cards\nWHERE \"setCode\" = 'CSP'\nAND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
  "387": "SELECT COUNT(*) \nFROM cards \nWHERE \"convertedManaCost\" > 5 \nAND \"setCode\" = 'CSP' \nAND power = 'None';\t----- bird -----\tcard_games",
  "388": "ERROR: (sqlite3.OperationalError) near \"s\": syntax error\n[SQL: SELECT flavorText\nFROM foreign_data\nWHERE name = 'Ancestor\\'s Chosen'\nAND language = 'Italian';]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tcard_games",
  "389": "SELECT r.text\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap' AND r.id = 3;\t----- bird -----\tcard_games",
  "390": "SELECT foreign_data.name\nFROM foreign_data\nJOIN cards ON foreign_data.uuid = cards.uuid\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap'\nAND cards.\"convertedManaCost\" = (\n    SELECT MAX(\"convertedManaCost\")\n    FROM cards\n    JOIN sets ON cards.setCode = sets.code\n    WHERE sets.name = 'Coldsnap'\n)\t----- bird -----\tcard_games",
  "391": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE \"convertedManaCost\" = 7 AND \"setCode\" = 'CSP') AS percentage\nFROM cards\nWHERE \"convertedManaCost\" = 7 AND \"setCode\" = 'CSP';\t----- bird -----\tcard_games",
  "392": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE \"setCode\" = 'CSP') AS percentage\nFROM cards\nWHERE \"setCode\" = 'CSP' AND \"convertedManaCost\" >= 5.0;\t----- bird -----\tcard_games",
  "393": "ERROR: (sqlite3.OperationalError) no such column: name\n[SQL: SELECT format, name\nFROM legalities\nWHERE status = 'Banned'\nGROUP BY format\nORDER BY COUNT(*) DESC\nLIMIT 1;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tcard_games",
  "394": "SELECT c.name, l.format\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.\"edhrecRank\" = 1;\t----- bird -----\tcard_games",
  "395": "ERROR: Error code: 400 - {'error': {'message': \"This model's maximum context length is 16385 tokens. However, your messages resulted in 22275 tokens. Please reduce the length of the messages.\", 'type': 'invalid_request_error', 'param': 'messages', 'code': 'context_length_exceeded'}}\t----- bird -----\tcard_games",
  "396": "SELECT name\nFROM sets\nWHERE code NOT IN (\n    SELECT \"setCode\"\n    FROM set_translations\n    WHERE language = 'Japanese'\n)\nAND code IN (\n    SELECT \"setCode\"\n    FROM set_translations\n    WHERE language = 'Korean'\n)\t----- bird -----\tcard_games",
  "397": "ERROR: (sqlite3.ProgrammingError) You can only execute one statement at a time.\n[SQL: SELECT DISTINCT frameVersion, name, artist\nFROM cards\nWHERE artist = 'Allen Williams';\n\nSELECT name\nFROM cards\nWHERE id IN (\n\tSELECT id\n\tFROM legalities\n\tWHERE status = 'Banned'\n);]\n(Background on this error at: https://sqlalche.me/e/20/f405)\t----- bird -----\tcard_games",
  "398": "SELECT bond_type, COUNT(*) AS count\nFROM bond\nGROUP BY bond_type\nORDER BY count DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
  "399": "ERROR: (sqlite3.OperationalError) no such column: b.atom_id\n[SQL: SELECT AVG(oxygen_count) AS average_oxygen_atoms\nFROM (\n    SELECT COUNT(a.atom_id) AS oxygen_count\n    FROM atom a\n    JOIN molecule m ON a.molecule_id = m.molecule_id\n    JOIN bond b ON a.atom_id = b.atom_id\n    WHERE a.element = 'o'\n    AND b.bond_type = '-'\n    GROUP BY a.molecule_id\n) subquery;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\ttoxicology",
  "400": "SELECT COUNT(DISTINCT molecule_id) / COUNT(DISTINCT bond_id) AS average_carcinogenic_single_bonded_molecules\nFROM bond\nWHERE bond_type = '-'\t----- bird -----\ttoxicology",
  "401": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = '---' AND m.label = '+';\t----- bird -----\ttoxicology",
  "402": "SELECT (COUNT(DISTINCT a.atom_id) * 100.0) / (SELECT COUNT(DISTINCT a2.atom_id)\nFROM atom a2\nJOIN connected c ON a2.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '-') AS percentage_carbon\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '-' AND a.element = 'c'\t----- bird -----\ttoxicology",
  "403": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
  "404": "SELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = 'double'\t----- bird -----\ttoxicology",
  "405": "SELECT label, COUNT(*) AS label_count\nFROM molecule\nWHERE molecule_id IN (\n    SELECT molecule_id\n    FROM atom\n    WHERE element = 'h'\n)\nGROUP BY label\nORDER BY label_count DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
  "406": "SELECT element\nFROM atom\nWHERE molecule_id IN (\n\tSELECT molecule_id\n\tFROM molecule\n\tWHERE label = '+'\n)\nGROUP BY element\nORDER BY COUNT(*) ASC\nLIMIT 1;\t----- bird -----\ttoxicology",
  "407": "SELECT bond_type\nFROM bond\nWHERE bond_id = (\n\tSELECT bond_id\n\tFROM connected\n\tWHERE (atom_id = 'TR004_8' AND atom_id2 = 'TR004_20')\n\t\tOR (atom_id = 'TR004_20' AND atom_id2 = 'TR004_8')\n)\t----- bird -----\ttoxicology",
  "408": "SELECT COUNT(DISTINCT a.atom_id)\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (a.element = 'I' OR a.element = 'S') AND b.bond_type = '-'\t----- bird -----\ttoxicology",
  "409": "SELECT COUNT(DISTINCT m.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+') AS percentage\nFROM molecule m\nLEFT JOIN atom a ON m.molecule_id = a.molecule_id\nWHERE a.element != 'F' AND m.label = '+'\t----- bird -----\ttoxicology",
  "410": "SELECT COUNT(DISTINCT m.molecule_id) * 100.0 / COUNT(DISTINCT b.molecule_id)\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = 'triple' AND m.label = '+'\t----- bird -----\ttoxicology",
  "411": "SELECT element\nFROM atom\nWHERE molecule_id = 'TR000'\nORDER BY element\nLIMIT 3;\t----- bird -----\ttoxicology",
  "412": "SELECT \n    (COUNT(*) * 100.0) / \n    (SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR008') \nFROM bond \nWHERE molecule_id = 'TR008' AND bond_type = '=';\t----- bird -----\ttoxicology",
  "413": "SELECT ROUND((COUNT(DISTINCT molecule_id) * 100.0) / (SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+'), 3) AS percentage_carcinogenic\nFROM molecule\nWHERE label = '+';\t----- bird -----\ttoxicology",
  "414": "SELECT ROUND((COUNT(DISTINCT a1.atom_id) * 100.0 / COUNT(DISTINCT a2.atom_id)), 4)\nFROM atom a1\nJOIN molecule m ON a1.molecule_id = m.molecule_id\nJOIN atom a2 ON m.molecule_id = a2.molecule_id\nWHERE m.molecule_id = 'TR206'\nAND a1.element = 'H'\t----- bird -----\ttoxicology",
  "415": "SELECT atom.element, molecule.label\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
  "416": "SELECT bond_type, COUNT(*) AS bond_count\nFROM bond\nWHERE molecule_id = 'TR010'\nGROUP BY bond_type\nORDER BY bond_count DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
  "417": "SELECT m.molecule_id, m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_type = '-' AND m.label != '-'\nORDER BY m.molecule_id ASC\nLIMIT 3;\t----- bird -----\ttoxicology",
  "418": "SELECT COUNT(*) \nFROM connected \nWHERE atom_id = 'TR009' OR atom_id2 = 'TR009'\t----- bird -----\ttoxicology",
  "419": "ERROR: (sqlite3.OperationalError) no such column: bond_type\n[SQL: SELECT bond_type, atom_id, atom_id2\nFROM connected\nWHERE bond_id = 'TR001_6_9';]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\ttoxicology",
  "420": "SELECT COUNT(*) \nFROM connected \nWHERE atom_id = 'TR000_19' OR atom_id2 = 'TR000_19';\t----- bird -----\ttoxicology",
  "421": "SELECT element\nFROM atom\nWHERE molecule_id = 'TR004'\t----- bird -----\ttoxicology",
  "422": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE CAST(SUBSTR(a.atom_id, 3) AS INTEGER) BETWEEN 21 AND 25\nAND m.label = '-'\t----- bird -----\ttoxicology",
  "423": "SELECT b.*\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE (a1.element = 'P' AND a2.element = 'N')\nOR (a1.element = 'N' AND a2.element = 'P')\t----- bird -----\ttoxicology",
  "424": "SELECT molecule_id, COUNT(bond_id) AS double_bonds\nFROM bond\nWHERE bond_type = '-'\nGROUP BY molecule_id\nORDER BY double_bonds DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
  "425": "SELECT AVG(num_bonds)\nFROM (\n\tSELECT COUNT(*) AS num_bonds\n\tFROM atom a\n\tJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\n\tWHERE a.element = 'iodine'\n\tGROUP BY a.atom_id\n) AS subquery;\t----- bird -----\ttoxicology",
  "426": "SELECT element\nFROM atom\nWHERE atom_id NOT IN (\n\tSELECT DISTINCT atom_id\n\tFROM connected\n)\t----- bird -----\ttoxicology",
  "427": "SELECT atom_id\nFROM atom\nWHERE atom_id IN (\n\tSELECT atom_id\n\tFROM connected\n\tWHERE bond_id IN (\n\t\tSELECT bond_id\n\t\tFROM bond\n\t\tWHERE molecule_id = 'TR041'\n\t)\n)\t----- bird -----\ttoxicology",
  "428": "SELECT element\nFROM atom\nWHERE atom_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
  "429": "SELECT element\nFROM atom\nWHERE atom_id IN (\n    SELECT atom_id\n    FROM connected\n    WHERE bond_id IN (\n        SELECT bond_id\n        FROM bond\n        WHERE bond_type = '-'\n        GROUP BY bond_id\n        HAVING COUNT(*) = 3\n    )\n)\t----- bird -----\ttoxicology",
  "430": "SELECT ROUND((COUNT(*) * 100.0) / (SELECT COUNT(*) FROM bond WHERE bond_type = '-'), 5) AS proportion_of_carcinogenic_bonds\nFROM bond\nWHERE bond_type = '-'\t----- bird -----\ttoxicology",
  "431": "SELECT COUNT(DISTINCT a.atom_id)\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE b.bond_type = 'triple'\nAND (a.element = 'phosphorus' OR a.element = 'bromine')\t----- bird -----\ttoxicology",
  "432": "SELECT element, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-')) AS percentage\nFROM atom\nWHERE element = 'cl' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-')\nGROUP BY element;\t----- bird -----\ttoxicology",
  "433": "SELECT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
  "434": "SELECT (COUNT(DISTINCT a.atom_id) * 100.0) / (SELECT COUNT(DISTINCT a.atom_id)\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = '-') AS percentage_cl\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'cl'\nAND m.label = '-';\t----- bird -----\ttoxicology",
  "435": "SELECT atom.element\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = '-'\nAND atom.atom_id = (\n    SELECT atom_id\n    FROM atom\n    WHERE molecule_id = molecule.molecule_id\n    ORDER BY atom_id\n    LIMIT 1 OFFSET 3\n)\t----- bird -----\ttoxicology",
  "436": "SELECT label, COUNT(element) AS hydrogen_count, \n       COUNT(element) * 1.0 / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS hydrogen_ratio\nFROM atom\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.molecule_id = 'TR006' AND element = 'H';\t----- bird -----\ttoxicology",
  "437": "SELECT molecule_id\nFROM molecule\nWHERE molecule_id NOT IN (\n    SELECT molecule_id\n    FROM atom\n    GROUP BY molecule_id\n    HAVING COUNT(atom_id) <= 5\n)\t----- bird -----\ttoxicology",
  "438": "SELECT COUNT(*) \nFROM satscores \nJOIN schools ON satscores.cds = schools.\"CDSCode\" \nWHERE \"AvgScrMath\" > 400 AND schools.Virtual = 'Y'\t----- bird -----\tcalifornia_schools",
  "439": "ERROR: Error code: 400 - {'error': {'message': \"This model's maximum context length is 16385 tokens. However, your messages resulted in 64912 tokens. Please reduce the length of the messages.\", 'type': 'invalid_request_error', 'param': 'messages', 'code': 'context_length_exceeded'}}\t----- bird -----\tcalifornia_schools",
  "440": "SELECT MAX(\"Percent (%) Eligible Free (Ages 5-17)\") \nFROM frpm \nWHERE \"CDSCode\" IN (\n\tSELECT cds \n\tFROM satscores \n\tWHERE \"NumGE1500\" / \"NumTstTakr\" > 0.3\n)\t----- bird -----\tcalifornia_schools",
  "441": "SELECT s.\"School\", s.\"CharterNum\"\nFROM satscores ss\nJOIN schools s ON ss.cds = s.\"CDSCode\"\nWHERE ss.\"AvgScrWrite\" > 499\nORDER BY ss.\"AvgScrWrite\" DESC;\t----- bird -----\tcalifornia_schools",
  "442": "ERROR: Error code: 400 - {'error': {'message': \"This model's maximum context length is 16385 tokens. However, your messages resulted in 19234 tokens. Please reduce the length of the messages.\", 'type': 'invalid_request_error', 'param': 'messages', 'code': 'context_length_exceeded'}}\t----- bird -----\tcalifornia_schools",
  "443": "SELECT \"School Name\"\nFROM frpm\nJOIN satscores ON frpm.\"CDSCode\" = satscores.cds\nWHERE frpm.\"Percent (%) Eligible Free (K-12)\" > 0.1\nAND satscores.\"NumGE1500\" > 0;\t----- bird -----\tcalifornia_schools",
  "444": "ERROR: (sqlite3.OperationalError) no such column: s.School\n[SQL: SELECT s.\"School\"\nFROM satscores s\nJOIN schools sc ON s.cds = sc.\"CDSCode\"\nWHERE sc.\"County\" = 'Riverside' AND s.\"AvgScrMath\" > 400;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tcalifornia_schools",
  "445": "SELECT \"School Name\", \"Street\", \"City\", \"Zip\", \"State\"\nFROM schools\nWHERE \"District\" = 'Monterey' AND \"School Type\" = 'High Schools (Public)' AND \"FRPM Count (Ages 5-17)\" > 800;\t----- bird -----\tcalifornia_schools",
  "446": "ERROR: (sqlite3.OperationalError) no such column: s.School\n[SQL: SELECT s.\"School\", s.\"AvgScrWrite\", s.\"Phone\"\nFROM satscores s\nJOIN schools sc ON s.cds = sc.\"CDSCode\"\nWHERE sc.\"OpenDate\" > '1991-01-01' OR sc.\"ClosedDate\" < '2000-01-01']\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tcalifornia_schools",
  "447": "SELECT \"School Name\", \"DOCType\"\nFROM frpm\nWHERE \"Charter Funding Type\" = 'Directly funded'\nAND (\"Enrollment (K-12)\" - \"Enrollment (Ages 5-17)\") > (\n    SELECT AVG(\"Enrollment (K-12)\" - \"Enrollment (Ages 5-17)\")\n    FROM frpm\n    WHERE \"Charter Funding Type\" = 'Directly funded'\n)\t----- bird -----\tcalifornia_schools",
  "448": "SELECT \"Percent (%) Eligible Free (K-12)\" \nFROM frpm \nWHERE \"CDSCode\" IN (\n    SELECT cds \n    FROM satscores \n    WHERE rtype = 'S' \n    ORDER BY enroll12 DESC \n    LIMIT 2 OFFSET 9\n)\t----- bird -----\tcalifornia_schools",
  "449": "SELECT \"CDSCode\", \"School Name\", \"Percent (%) Eligible FRPM (K-12)\" \nFROM frpm \nWHERE \"School Type\" = 'High Schools (Public)' \nAND \"Charter School (Y/N)\" = 1 \nORDER BY \"FRPM Count (K-12)\" DESC \nLIMIT 5;\t----- bird -----\tcalifornia_schools",
  "450": "SELECT Street, City, Zip, State\nFROM schools\nWHERE \"CDSCode\" = (\n\tSELECT cds\n\tFROM satscores\n\tWHERE \"NumGE1500\" = (\n\t\tSELECT MIN(\"NumGE1500\")\n\t\tFROM satscores\n\t)\n)\t----- bird -----\tcalifornia_schools",
  "451": "SELECT s.\"AdmFName1\" || ' ' || s.\"AdmLName1\" AS \"Administrator Name\"\nFROM satscores ss\nJOIN schools s ON ss.cds = s.\"CDSCode\"\nWHERE ss.\"NumGE1500\" = (SELECT MAX(\"NumGE1500\") FROM satscores)\t----- bird -----\tcalifornia_schools",
  "452": "SELECT AVG(NumTstTakr)\nFROM satscores\nJOIN schools ON satscores.cds = schools.\"CDSCode\"\nWHERE schools.County = 'Fresno' AND schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
  "453": "SELECT schools.\"Phone\"\nFROM schools\nJOIN satscores ON schools.\"CDSCode\" = satscores.cds\nWHERE schools.\"District\" = 'Fresno Unified'\nORDER BY satscores.\"AvgScrRead\" ASC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
  "454": "SELECT s.\"School\"\nFROM satscores ss\nJOIN schools s ON ss.cds = s.\"CDSCode\"\nWHERE s.\"Virtual\" = 'Y'\nAND ss.rtype = 'S'\nAND ss.\"AvgScrRead\" IN (\n    SELECT DISTINCT \"AvgScrRead\"\n    FROM satscores\n    WHERE rtype = 'S'\n    ORDER BY \"AvgScrRead\" DESC\n    LIMIT 5\n)\t----- bird -----\tcalifornia_schools",
  "455": "SELECT s.\"School\", AVG(ss.\"AvgScrWrite\") AS \"Average Writing Score\"\nFROM schools s\nJOIN satscores ss ON s.\"CDSCode\" = ss.cds\nWHERE s.\"AdmFName1\" = 'Ricci' AND s.\"AdmLName1\" = 'Ulrich'\nGROUP BY s.\"School\";\t----- bird -----\tcalifornia_schools",
  "456": "ERROR: (sqlite3.OperationalError) no such column: enroll12\n[SQL: SELECT \"CDSCode\", \"NCESDist\", \"NCESSchool\", \"StatusType\", \"County\", \"District\", \"School\", \"Street\", \"StreetAbr\", \"City\", \"Zip\", \"State\", \"MailStreet\", \"MailStrAbr\", \"MailCity\", \"MailZip\", \"MailState\", \"Phone\", \"Ext\", \"Website\", \"OpenDate\", \"ClosedDate\", \"Charter\", \"CharterNum\", \"FundingType\", \"DOC\", \"DOCType\", \"SOC\", \"SOCType\", \"EdOpsCode\", \"EdOpsName\", \"EILCode\", \"EILName\", \"GSoffered\", \"GSserved\", \"Virtual\", \"Magnet\", \"Latitude\", \"Longitude\", \"AdmFName1\", \"AdmLName1\", \"AdmEmail1\", \"AdmFName2\", \"AdmLName2\", \"AdmEmail2\", \"AdmFName3\", \"AdmLName3\", \"AdmEmail3\", \"LastUpdate\"\nFROM schools\nWHERE \"GSoffered\" LIKE '%1-12%'\nORDER BY enroll12 DESC;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tcalifornia_schools",
  "457": "SELECT AVG(NumSchools) AS \"Monthly Average Number of Schools Opened\"\nFROM (\n    SELECT COUNT(*) AS NumSchools\n    FROM schools\n    WHERE County = 'Alameda' \n    AND District = 'Elementary School District'\n    AND OpenDate >= '1980-01-01' \n    AND OpenDate < '1981-01-01'\n    GROUP BY strftime('%m', OpenDate)\n) sub;\t----- bird -----\tcalifornia_schools",
  "458": "SELECT COUNT(DISTINCT s.\"CDSCode\") / COUNT(DISTINCT s2.\"CDSCode\")\nFROM schools s\nJOIN schools s2 ON s.\"County\" = 'Orange' AND s2.\"County\" = 'Orange'\nWHERE s.\"GSoffered\" LIKE '%Unified%' AND s2.\"GSoffered\" LIKE '%Elementary%'\t----- bird -----\tcalifornia_schools",
  "459": "SELECT \"Street\", \"School\"\nFROM satscores\nJOIN schools ON satscores.cds = schools.\"CDSCode\"\nORDER BY \"AvgScrMath\" DESC\nLIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
  "460": "SELECT COUNT(*) \nFROM schools s\nJOIN frpm f ON s.\"CDSCode\" = f.\"CDSCode\"\nWHERE s.County = 'Los Angeles' \nAND s.Charter = 0 \nAND f.\"Percent (%) Eligible Free (K-12)\" < 0.18;\t----- bird -----\tcalifornia_schools",
  "461": "SELECT \"Enrollment (Ages 5-17)\" \nFROM frpm \nWHERE \"School Name\" = 'State Special School' \nAND \"City\" = 'Fremont' \nAND \"Academic Year\" = '2014-2015'\t----- bird -----\tcalifornia_schools",
  "462": "SELECT \"School Name\", \"Percent (%) Eligible FRPM (Ages 5-17)\"\nFROM frpm\nJOIN schools ON frpm.\"CDSCode\" = schools.\"CDSCode\"\nWHERE \"County Name\" = 'Los Angeles' AND \"Low Grade\" = 'K' AND \"High Grade\" = '9'\t----- bird -----\tcalifornia_schools",
  "463": "SELECT \"County\", COUNT(*) AS \"Number of Schools\"\nFROM schools\nWHERE \"County\" IN ('San Diego', 'Santa Barbara')\nAND \"GSoffered\" = 'N'\nGROUP BY \"County\"\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
  "464": "SELECT \"Low Grade\", \"High Grade\" \nFROM frpm \nJOIN schools ON frpm.\"CDSCode\" = schools.\"CDSCode\" \nWHERE schools.\"Longitude\" = (SELECT MAX(\"Longitude\") FROM schools)\t----- bird -----\tcalifornia_schools",
  "465": "ERROR: (sqlite3.ProgrammingError) You can only execute one statement at a time.\n[SQL: SELECT COUNT(*) \nFROM schools \nWHERE \"GSoffered\" = 'K-8' AND \"Magnet\" = 1 AND \"EdOpsCode\" = '00';\n\nSELECT City, COUNT(*) AS NumSchools\nFROM schools\nWHERE \"GSoffered\" = 'K-8'\nGROUP BY City;]\n(Background on this error at: https://sqlalche.me/e/20/f405)\t----- bird -----\tcalifornia_schools",
  "466": "SELECT \"Percent (%) Eligible Free (K-12)\", \"District Code\"\nFROM frpm\nWHERE \"School Name\" IN (\n\tSELECT \"School\"\n\tFROM schools\n\tWHERE \"AdmFName1\" = 'Alusine'\n)\t----- bird -----\tcalifornia_schools",
  "467": "SELECT AdmEmail1\nFROM schools\nWHERE County = 'San Bernardino' \nAND City = 'San Bernardino' \nAND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' \nAND (EdOpsName = 'Intermediate/Middle Schools (Public)' OR EdOpsName = 'Unified School District')\t----- bird -----\tcalifornia_schools",
  "468": "SELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN card c ON a.account_id = c.disp_id\nJOIN disp d ON a.account_id = d.account_id\nJOIN client cl ON d.client_id = cl.client_id\nJOIN district dis ON cl.district_id = dis.district_id\nWHERE c.issued > (\n    SELECT MAX(t.date)\n    FROM trans t\n    WHERE t.account_id = a.account_id\n)\nAND dis.A6 = 'east Bohemia'\t----- bird -----\tfinancial",
  "469": "SELECT COUNT(*) \nFROM district \nWHERE \"A14\" > 6000 AND \"A14\" < 10000 AND district_id IN (\n    SELECT district_id \n    FROM client \n    WHERE gender = 'F'\n)\t----- bird -----\tfinancial",
  "470": "SELECT COUNT(client_id) \nFROM client \nJOIN district ON client.district_id = district.district_id \nJOIN account ON client.district_id = account.district_id \nJOIN trans ON account.account_id = trans.account_id \nWHERE client.gender = 'M' \nAND district.\"A3\" = 'north Bohemia' \nAND trans.type = 'PRIJEM' \nGROUP BY client.client_id \nHAVING AVG(trans.amount) > 8000\t----- bird -----\tfinancial",
  "471": "ERROR: (sqlite3.OperationalError) near \"SELECT\": syntax error\n[SQL: SELECT account_id\nFROM client\nWHERE gender = 'F'\nORDER BY birth_date ASC\nLIMIT 1\n\nSELECT MIN(AVG(amount))\nFROM \"order\"\nGROUP BY account_id\nORDER BY MIN(AVG(amount)) ASC\nLIMIT 1\n\nSELECT MAX(AVG(amount))\nFROM \"order\"\nGROUP BY account_id\nORDER BY MAX(AVG(amount)) DESC\nLIMIT 1]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tfinancial",
  "472": "ERROR: (sqlite3.OperationalError) ambiguous column name: account_id\n[SQL: SELECT account_id\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nGROUP BY client.client_id\nORDER BY AVG(account_id) DESC, birth_date ASC\nLIMIT 1;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tfinancial",
  "473": "ERROR: (sqlite3.OperationalError) no such column: frequency\n[SQL: SELECT account_id\nFROM loan\nWHERE date LIKE '1997%'\nAND amount = (\n    SELECT MIN(amount)\n    FROM loan\n    WHERE date LIKE '1997%'\n)\nAND frequency = 'POPLATEK TYDNE';]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tfinancial",
  "474": "ERROR: (sqlite3.OperationalError) ambiguous column name: account_id\n[SQL: SELECT account_id\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nWHERE duration > 12\nAND date LIKE '1993%'\nAND amount = (\n    SELECT MAX(amount)\n    FROM loan\n    WHERE duration > 12\n    AND date LIKE '1993%'\n)]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tfinancial",
  "475": "SELECT COUNT(*) \nFROM client \nJOIN district ON client.district_id = district.district_id \nWHERE client.gender = 'F' \nAND client.birth_date < '1950-01-01' \nAND district.A3 = 'Sokolov'\t----- bird -----\tfinancial",
  "476": "SELECT d.*\nFROM client c\nJOIN account a ON c.district_id = a.district_id\nJOIN district d ON a.district_id = d.district_id\nWHERE c.gender = 'F' AND c.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
  "477": "SELECT \n    COUNT(C.client_id) * 100.0 / (SELECT COUNT(client_id) FROM client WHERE district_id IN (SELECT district_id FROM district WHERE \"A3\" = 'south Bohemia' ORDER BY \"A10\" DESC LIMIT 1) AND gender = 'M') AS percentage_male_clients\nFROM \n    client C\nWHERE \n    C.district_id IN (SELECT district_id FROM district WHERE \"A3\" = 'south Bohemia' ORDER BY \"A10\" DESC LIMIT 1)\n    AND C.gender = 'M'\t----- bird -----\tfinancial",
  "478": "SELECT (MAX(t.balance) - MIN(t.balance)) / MIN(t.balance) AS increase_rate\nFROM trans t\nJOIN loan l ON t.account_id = l.account_id\nWHERE l.date = '1993-07-05'\nAND t.date BETWEEN '1993-03-22' AND '1998-12-27'\t----- bird -----\tfinancial",
  "479": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM loan WHERE status = 'A') \nFROM loan \nWHERE status = 'A' AND payments = amount;\t----- bird -----\tfinancial",
  "480": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM loan WHERE amount < 100000 AND status = 'A') AS percentage\nFROM loan\nWHERE amount < 100000 AND status = 'A'\t----- bird -----\tfinancial",
  "481": "SELECT d.\"A3\", ((d.\"A12\" - d.\"A13\") / d.\"A13\") * 100 AS unemployment_rate_increment\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nJOIN disp ON c.client_id = disp.client_id\nJOIN account a ON disp.account_id = a.account_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.status = 'A' AND l.date >= '1995-01-01' AND l.date <= '1996-12-31'\t----- bird -----\tfinancial",
  "482": "SELECT d.\"A3\" AS district, COUNT(c.client_id) AS female_account_holders\nFROM client c\nJOIN account a ON c.district_id = a.district_id\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'F'\nGROUP BY d.\"A3\"\nORDER BY female_account_holders DESC\nLIMIT 9;\t----- bird -----\tfinancial",
  "483": "SELECT COUNT(*) \nFROM loan \nWHERE date BETWEEN '1995-01-01' AND '1997-12-31' \nAND amount >= 250000 \nAND status = 'A'\t----- bird -----\tfinancial",
  "484": "ERROR: (sqlite3.OperationalError) ambiguous column name: account_id\n[SQL: SELECT COUNT(DISTINCT account_id)\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE district_id = 1\nAND status = 'A']\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tfinancial",
  "485": "ERROR: (sqlite3.OperationalError) no such column: district_id\n[SQL: SELECT COUNT(client_id) \nFROM client \nWHERE district_id = (\n    SELECT district_id \n    FROM (\n        SELECT district_id, COUNT(*) AS num_crimes\n        FROM trans\n        WHERE date >= '1995-01-01' AND date <= '1995-12-31'\n        GROUP BY district_id\n        ORDER BY num_crimes DESC\n        LIMIT 2\n    )\n    ORDER BY num_crimes ASC\n    LIMIT 1\n) AND gender = 'M';]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tfinancial",
  "486": "SELECT d.\"A3\", SUM(t.amount) AS total_withdrawals\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ' AND t.date >= '1996-01-01' AND t.date <= '1996-01-31' AND t.k_symbol <> 'VYBER KARTOU'\nGROUP BY d.\"A3\"\nORDER BY total_withdrawals DESC\nLIMIT 10;\t----- bird -----\tfinancial",
  "487": "ERROR: (sqlite3.OperationalError) ambiguous column name: account_id\n[SQL: SELECT COUNT(DISTINCT account_id)\nFROM loan\nJOIN account ON loan.account_id = account.account_id\nJOIN district ON account.district_id = district.district_id\nWHERE district_id = 1\nAND status = 'A']\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tfinancial",
  "488": "ERROR: (sqlite3.OperationalError) near \"FROM\": syntax error\n[SQL: SELECT COUNT(client_id) \nFROM client \nWHERE gender = 'M' \nAND district_id = (\n    SELECT district_id \n    FROM (\n        SELECT district_id, COUNT(*) AS num_crimes\n        FROM trans\n        WHERE type = 'PRIJEM' \n        AND EXTRACT(YEAR FROM date) = 1995\n        GROUP BY district_id\n        ORDER BY num_crimes DESC\n        LIMIT 2\n    ) AS subquery\n    ORDER BY num_crimes ASC\n    LIMIT 1\n)]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tfinancial",
  "489": "SELECT DISTINCT d.client_id\nFROM disp d\nJOIN card c ON d.disp_id = c.disp_id\nJOIN trans t ON d.account_id = t.account_id\nWHERE c.issued >= '1998-01-01' AND c.issued <= '1998-12-31'\nAND t.amount < (SELECT AVG(t2.amount) FROM trans t2 WHERE t2.date >= '1998-01-01' AND t2.date <= '1998-12-31')\t----- bird -----\tfinancial",
  "490": "ERROR: (sqlite3.OperationalError) no such column: type\n[SQL: SELECT DISTINCT type\nFROM account\nWHERE account_id NOT IN (\n    SELECT account_id\n    FROM loan\n)\nAND district_id IN (\n    SELECT district_id\n    FROM district\n    WHERE \"A10\" > 8000 AND \"A10\" <= 9000\n)]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tfinancial",
  "491": "SELECT AVG(A11) \nFROM district \nWHERE A11 > 4000 \nAND district_id IN (\n    SELECT district_id \n    FROM account \n    WHERE strftime('%Y', date) >= '1997'\n)\t----- bird -----\tfinancial",
  "492": "SELECT * \nFROM trans \nWHERE account_id = (\n    SELECT account_id \n    FROM disp \n    WHERE client_id = 3356 \n    AND type = 'OWNER'\n) \nAND type = 'VYDAJ' \nAND operation = 'VYBER'\t----- bird -----\tfinancial",
  "493": "SELECT COUNT(c.client_id) * 100.0 / (SELECT COUNT(*) FROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE d.\"A10\" > 10000) AS percentage\nFROM client c\nJOIN account a ON c.district_id = a.district_id\nJOIN district d ON a.district_id = d.district_id\nWHERE c.gender = 'F' AND d.\"A10\" > 10000;\t----- bird -----\tfinancial",
  "494": "SELECT SUM(l.amount) AS total_loan_amount\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN client c ON a.district_id = c.district_id\nWHERE c.gender = 'M'\nAND l.date BETWEEN '1996-01-01' AND '1997-12-31'\t----- bird -----\tfinancial",
  "495": "ERROR: (sqlite3.OperationalError) near \"SELECT\": syntax error\n[SQL: SELECT COUNT(*) \nFROM trans \nWHERE account_id = 3 \nAND operation = 'VYBER' \nAND k_symbol = 'VYBER' \n\nSELECT SUM(amount) \nFROM trans \nWHERE account_id = 3 \nAND operation = 'VYBER' \nAND k_symbol = 'VYBER']\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tfinancial",
  "496": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM client WHERE gender = 'M') \nFROM account \nJOIN client ON account.district_id = client.district_id \nWHERE frequency = 'POPLATEK TYDNE' AND client.gender = 'M'\t----- bird -----\tfinancial",
  "497": "ERROR: (sqlite3.OperationalError) ambiguous column name: account_id\n[SQL: SELECT account_id\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nWHERE client.gender = 'F'\nGROUP BY client.client_id\nORDER BY MAX(client.birth_date) ASC, AVG(account.amount) ASC\nLIMIT 1;]\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\t----- bird -----\tfinancial",
  "498": "SELECT AVG(amount) \nFROM loan \nWHERE status = 'A' \nAND date > (\n    SELECT date \n    FROM trans \n    ORDER BY date DESC \n    LIMIT 1\n)\t----- bird -----\tfinancial",
  "499": "SELECT c.client_id, (strftime('%Y', 'now') - strftime('%Y', c.birth_date)) AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card cd ON d.disp_id = cd.disp_id\nWHERE cd.type = 'gold'\t----- bird -----\tfinancial"
}